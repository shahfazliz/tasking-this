{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/ui-components/BasicNavLink.tsx", "../app/session.tsx", "../app/resource/db.tsx", "../app/model/Organization.tsx", "../app/resource/Organizations.tsx", "../app/resource/Roles.tsx", "../app/model/Role.tsx", "../app/resource/Projects.tsx", "../app/model/Project.tsx", "../app/resource/Topics.tsx", "../app/model/Topic.tsx", "../app/resource/Users.tsx", "../app/model/User.tsx", "../app/routes/taskstatus/delete.$id.tsx", "../app/resource/TaskStatus.tsx", "../app/model/TaskStatus.tsx", "../app/routes/taskstatus/update.$id.tsx", "../app/sanitizerForm.tsx", "../app/ui-components/TaskStatusForm.tsx", "../app/ui-components/FieldsetLegend.tsx", "../app/ui-components/LabelInput.tsx", "../app/ui-components/LabelTextarea.tsx", "../app/ui-components/LabelColor.tsx", "../app/routes/create-an-account.tsx", "../app/ui-components/UserForm.tsx", "../app/routes/taskstatus/create.tsx", "../app/routes/taskstatus/index.tsx", "../app/routes/organizations.tsx", "../app/routes/organizations/delete.$id.tsx", "../app/routes/organizations/update.$id.tsx", "../app/ui-components/OrganizationForm.tsx", "../app/routes/organizations/create.tsx", "../app/routes/organizations/index.tsx", "../app/ui-components/Chip.tsx", "../app/ui-components/LabelSelect.tsx", "../app/routes/permissions.tsx", "../app/routes/permissions/delete.$id.tsx", "../app/resource/Permissions.tsx", "../app/model/Permission.tsx", "../app/routes/permissions/update.$id.tsx", "../app/ui-components/PermissionForm.tsx", "../app/routes/permissions/create.tsx", "../app/routes/permissions/index.tsx", "../app/routes/resources.tsx", "../app/routes/resources/delete.$id.tsx", "../app/resource/Resources.tsx", "../app/model/Resource.tsx", "../app/routes/resources/update.$id.tsx", "../app/ui-components/ResourceForm.tsx", "../app/routes/resources/create.tsx", "../app/routes/resources/index.tsx", "../app/routes/projects.tsx", "../app/routes/projects/delete.$id.tsx", "../app/routes/projects/update.$id.tsx", "../app/ui-components/ProjectForm.tsx", "../app/routes/projects/create.tsx", "../app/routes/projects/index.tsx", "../app/routes/sign-out.tsx", "../app/routes/account.tsx", "../app/routes/reports.tsx", "../app/routes/reports/index.tsx", "../app/resource/Reports.tsx", "../app/routes/sign-in.tsx", "../app/routes/topics.tsx", "../app/routes/topics/delete.$id.tsx", "../app/routes/topics/update.$id.tsx", "../app/ui-components/TopicForm.tsx", "../app/routes/topics/create.tsx", "../app/routes/topics/index.tsx", "../app/routes/index.tsx", "../app/routes/roles.tsx", "../app/routes/roles/delete.$id.tsx", "../app/routes/roles/update.$id.tsx", "../app/ui-components/RoleForm.tsx", "../app/routes/roles/create.tsx", "../app/routes/roles/index.tsx", "../app/routes/tasks.tsx", "../app/routes/tasks/delete.$id.tsx", "../app/resource/Tasks.tsx", "../app/model/Task.tsx", "../app/routes/tasks/update.$id.tsx", "../app/ui-components/TaskForm.tsx", "../app/routes/tasks/create.tsx", "../app/routes/tasks/index.tsx", "../app/routes/users.tsx", "../app/routes/users/delete.$id.tsx", "../app/routes/users/update.$id.tsx", "../app/routes/users/create.tsx", "../app/routes/users/index.tsx", "../app/routes/logs.tsx", "../app/routes/logs/index.tsx", "../app/model/Log.tsx", "../app/resource/Logs.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(err: unknown) {\n          reject(err);\n        },\n        onError(error: unknown) {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { LinksFunction, LoaderArgs, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport {\n  Links,\n  LiveReload,\n  Meta, Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLoaderData } from\n'@remix-run/react';\nimport mainStyles from '~/styles/main.css';\nimport sideMenuStyles from '~/styles/side-menu.css';\n\nimport { BasicNavLink as NavLink } from '~/ui-components/BasicNavLink';\nimport { getUserSession } from '~/session';\nimport { useState } from 'react';\n\nexport default function App() {\n  const { user, isAdmin } = useLoaderData<typeof loader>();\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n\n  const handleToggleMenu = () => {\n    setMenuIsOpen(!menuIsOpen);\n  };\n\n  const handleToggleBackgroundMenu = () => {\n    setMenuIsOpen(false);\n  };\n\n  return (\n    <html lang='en' data-theme='light'>\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <nav className='container-fluid'>\n          <ul className='logo'>\n            <li>\n              <strong>Team Task Manager</strong>\n            </li>\n          </ul>\n          <ul>\n            {!user && <>\n              <li><NavLink to='/sign-in'>sign in</NavLink></li>\n              <li><NavLink to='/create-an-account'>sign up</NavLink></li>\n            </>}\n            {user && <li><NavLink to='/account'>{user.name}</NavLink></li>}\n          </ul>\n        </nav>\n        <div onClick={handleToggleBackgroundMenu} className={menuIsOpen ? 'background-menu-open' : 'background-menu-close'}></div>\n        <aside className={menuIsOpen ? 'menu-open' : 'menu-close'}>\n          {user &&\n          <>\n              <nav className='closed-on-mobile'>\n                <ul>\n                  {isAdmin && <li><NavLink to='/users'>users</NavLink></li>}\n                  <li><NavLink to='/organizations'>organizations</NavLink></li>\n                  {isAdmin && <li><NavLink to='/roles'>roles</NavLink></li>}\n                  {/* <li><NavLink to='/permissions'>permissions</NavLink></li> */}\n                  <li><NavLink to='/projects'>projects</NavLink></li>\n                  <li><NavLink to='/topics'>topics</NavLink></li>\n                  {isAdmin && <li><NavLink to='/taskstatus'>task status</NavLink></li>}\n                  <li><NavLink to='/tasks'>tasks</NavLink></li>\n                  <li><NavLink to='/resources'>resources</NavLink></li>\n                  {/* <li><NavLink to='/logs'>logs</NavLink></li> */}\n                  <li><NavLink to='/reports'>reports</NavLink></li>\n                </ul>\n              </nav>\n            </>}\n\n        </aside>\n        {user &&\n        <button\n          id='menu-toggle'\n          aria-label='menu'\n          onClick={handleToggleMenu}>\n\n            <i className=\"lni lni-menu\"></i>\n          </button>}\n\n        <main className='container'>\n          <div role='document'>\n            <section>\n              <Outlet />\n              <ScrollRestoration />\n              <Scripts />\n              <LiveReload />\n            </section>\n          </div>\n        </main>\n        <footer>\n          \n        </footer>\n      </body>\n    </html>);\n\n}\n\nexport function ErrorBoundry({ error }: any) {\n  console.error(error);\n  return (\n    <html lang='en'>\n      <head>\n        <title>Oh no!</title>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <h1>Sorry</h1>\n        {error.message}\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { user } = await getUserSession(request);\n  const roles = (await user?.roles()) ?? [];\n  const isAdmin = roles.some(({ name }: {name: String;}) => name === 'Admin');\n\n  return { user, isAdmin };\n};\n\nexport function CatchBoundry() {\n  const caught = useCatch();\n\n  console.error(caught);\n  return (\n    <html lang='en'>\n      <head>\n        <title>Oh no!</title>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <h1>Sorry</h1>\n        {caught.statusText}\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}\n\nexport const links: LinksFunction = () => {\n  return [{\n    rel: 'stylesheet',\n    href: 'https://unpkg.com/@picocss/pico@latest/css/pico.min.css'\n  }, {\n    rel: 'stylesheet',\n    href: 'https://cdn.lineicons.com/4.0/lineicons.css'\n  }, {\n    rel: 'stylesheet',\n    href: mainStyles\n  }, {\n    rel: 'stylesheet',\n    href: sideMenuStyles\n  }];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'Team Task Manager',\n  viewport: 'width=device-width,initial-scale=1'\n});", "import { NavLink } from '@remix-run/react';\n\n// \"none\" - Default behavior. This will prevent any prefetching from happening. This is recommended when linking to pages that require a user session that the browser won't be able to prefetch anyway.\n// \"intent\" - Recommended if you want to prefetch. Fetches when Remix thinks the user intends to visit the link. Right now the behavior is simple: if they hover or focus the link it will prefetch the resources. In the future we hope to make this even smarter. Links with large click areas/padding get a bit of a head start. It is worth noting that when using prefetch=\"intent\", <link rel=\"prefetch\"> elements will be inserted on hover/focus and removed if the <Link> loses hover/focus. Without proper cache-control headers on your loaders, this could result in repeated prefetch loads if a user continually hovers on and off a link.\n// \"render\" - Fetches when the link is rendered.\n\ntype BasicNavLinkProps = {\n  prefetch?: 'none' | 'intent' | 'render';\n  role?: string;\n  to: string;\n  dataTooltip?: string;\n  children: React.ReactNode;\n};\n\ntype NavLinkProps = {\n  to: string;\n  role?: string;\n  text?: string;\n};\n\nconst BasicNavLink = ({prefetch='none', role='', to, children, dataTooltip}: BasicNavLinkProps) => {\n  return (<NavLink\n    prefetch={prefetch}\n    to={to}\n    role={role}\n    data-tooltip={dataTooltip}\n  >\n    {children}\n  </NavLink>);\n};\n\nconst CreateNavLink = ({to, role, text}: NavLinkProps) => {\n  return <BasicNavLink to={to} role={role}><i style={{position: 'relative', top: '2px'}} className='lni lni-plus' title='create'></i><span> {text}</span></BasicNavLink>\n};\n\nconst UpdateNavLink = ({to}: NavLinkProps) => {\n  return <BasicNavLink to={to} dataTooltip='update'><i className='lni lni-pencil'></i></BasicNavLink>\n};\n\nconst DeleteNavLink = ({to}: NavLinkProps) => {\n  return <BasicNavLink to={to} dataTooltip='delete'><i className='lni lni-trash-can'></i></BasicNavLink>\n}\n\nexport { \n  BasicNavLink,\n  CreateNavLink,\n  DeleteNavLink,\n  UpdateNavLink,\n};\n", "import {\n  createCookie,\n  createFileSessionStorage\n} from '@remix-run/node';\nimport { search as searchUser } from '~/model/User';\n\n// In this example the Cookie is created separately.\nconst sessionCookie = createCookie('__session', {\n  secrets: ['r3m1xr0ck5'],\n  sameSite: true,\n});\n\nconst { getSession, commitSession, destroySession } =\n  createFileSessionStorage({\n    // The root directory where you want to store the files.\n    // Make sure it's writable!\n    dir: 'user-sessions',\n    cookie: sessionCookie,\n  });\n\nconst getUserSession = async(request) => {\n  const session = await getSession(request.headers.get('Cookie'));\n  const userId = session.get('id');\n  const users = userId\n    ? await searchUser({ id: userId })\n    : [];\n\n  return {\n    session,\n    user: users[0],\n  };\n};\n\nconst setCookieHeader = async(session) => {\n  return {\n    'Set-Cookie': await commitSession(session),\n  }\n};\n\nconst destroyCookieHeader = async(request) => {\n  return {\n    'Set-Cookie': await destroySession(request)\n  };\n};\n\nexport { getUserSession, setCookieHeader, destroyCookieHeader };\n", "import { createPool, Pool } from 'mysql2';\nimport NodeCache from 'node-cache';\n\nlet cache:NodeCache | undefined = undefined;\nlet pool:Pool | undefined = undefined;\n\nfunction connect() {\n  if (pool !== undefined) {\n    return pool?.promise();\n  }\n\n  pool = createPool({\n    host: process.env.TTDBHOST,\n    user: process.env.TTDBUSERNAME,\n    password: process.env.TTDBPASSWORD,\n    database: 'eisenhowermatrix',\n    connectionLimit: 100,\n    queueLimit: 100,\n  });\n  \n  return pool.promise();\n}\n\nconst db = connect();\n\nfunction getCache() {\n  if (cache !== undefined) {\n    return cache;\n  }\n\n  cache = new NodeCache({ stdTTL: 5, checkperiod: 60 });\n  return cache;\n}\n\nasync function execute(query:string, values:string[]) {\n  let connection;\n  let result;\n  const isSelectOperation = query.includes('SELECT ');\n\n  // Insert or Delete queries are not cached\n  if (!isSelectOperation) {\n    try {\n      connection = await db.getConnection();\n      result = await connection.execute(query, values);\n    } catch (error) {\n      throw error;\n    } finally {\n      if (connection) {\n        connection.release();\n        return result;\n      }\n    }\n  }\n  \n  // Select queries get from cache\n  const key = JSON.stringify({query, values});\n  const cache = getCache();\n  const cachedResult = cache.get(key);\n  if (cachedResult) {\n    return cachedResult;\n  }\n\n  // If not in cache, get from database and set in cache\n  try {\n    connection = await db.getConnection();\n    result = await connection.execute(query, values);\n  } catch (error) {\n    throw error;\n  } finally {\n    if (connection) {\n      connection.release();\n      cache.set(key, result);\n      return result;\n    }\n  }\n}\n\nexport default {\n  execute,\n};", "import {\n  addUser as addUserIntoOrganization,\n  create as createOrganization,\n  erase as eraseOrganization,\n  eraseUser as eraseUserFromOrganization,\n  search as searchOrganization,\n  update as updateOrganization,\n} from '~/resource/Organizations';\nimport type { UserType } from './User';\n\nconst TABLE_NAME = 'Organizations';\n\nconst TABLE_ATTRIBUTES = [\n  'name',\n  'description',\n  'createdByUserId',\n  'updatedByUserId',\n];\n\ntype OrganizationType = {\n  id: number;\n  name: string;\n  description: string;\n  createdBy: UserType;\n  updatedBy: UserType;\n  createdAt: string;\n  updatedAt: string;\n  users: UserType[];\n  getAttributeValues: () => [];\n  create: () => OrganizationType;\n  udpate: () => OrganizationType;\n}\n\ntype CriteriaObj = {\n  createdByUserId?: number;\n  id?: number;\n  name?: string;\n}\n\nfunction Organization(obj:OrganizationType) {\n  return this.set(obj);\n}\n\nfunction getAttributeValues() {\n  return TABLE_ATTRIBUTES.map((attribute) => {\n    switch (attribute) {\n      case 'createdByUserId': return this.createdBy.id;\n      case 'updatedByUserId': return this.updatedBy.id;\n      default: return this[attribute];\n    }\n  });\n}\n\nfunction set(obj: { [keyAttribute: string]: any; }) {\n  Object\n    .keys(obj)\n    .forEach((attribute) => this[attribute] = obj[attribute]);\n  \n  return this;\n}\n\nasync function create() {\n  try {\n    await createOrganization(this);\n  } catch (error) {\n    console.error('createOrganization error:', error);\n  }\n  return this;\n}\n\nasync function search(criteriaObj:CriteriaObj):Promise<OrganizationType[]> {\n  try{\n    return await searchOrganization(criteriaObj);\n  } catch(error) {\n    console.error('searchOrganization error:', error);\n    return [];\n  }\n}\n\nasync function update() {\n  try {\n    await updateOrganization(this);\n  } catch(error) {\n    console.error('updateOrganization error:', error);\n  }\n  return this;\n}\n\nasync function erase(criteriaObj:CriteriaObj) {\n  try {\n    await eraseOrganization(criteriaObj);\n  } catch(error) {\n    console.error('eraseOrganization error:', error);\n  }\n}\n\nasync function addUser(criteriaObj:{userId:number, organizationId:number}) {\n  try {\n    await addUserIntoOrganization(criteriaObj);\n  } catch(error) {\n    console.error('addUserIntoOrganization error:', error);    \n  }\n  return this;\n}\n\nasync function eraseUser(criteriaObj:{userId:number, organizationId:number}) {\n  try {\n    await eraseUserFromOrganization(criteriaObj);\n  } catch(error) {\n    console.error('eraseUserFromOrganization error:', error);\n  }\n  return this;\n}\n\nObject.assign(\n  Organization.prototype,\n  {\n    getAttributeValues,\n    set,\n    create,\n    update,\n  }\n);\n\nexport {\n  Organization,\n  TABLE_NAME,\n  TABLE_ATTRIBUTES,\n  search,\n  erase,\n  addUser,\n  eraseUser,\n};\nexport type { OrganizationType };\n\n", "import type { OrganizationType as ObjectType } from '~/model/Organization';\nimport { Organization as Entity, TABLE_ATTRIBUTES, TABLE_NAME } from '~/model/Organization';\nimport { search as searchUsers } from '~/model/User';\nimport db from '~/resource/db';\n\nconst getObjectKeyValues = (obj) => {\n  const keys = Object.keys(obj);\n  const values = keys.map(key => `${obj[key]}`);\n  return {\n    keys,\n    values,\n  }\n}\n\nasync function create(obj:ObjectType) {\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => '?');\n\n  const query = `\n    INSERT INTO ${TABLE_NAME} (${TABLE_ATTRIBUTES.join(',')})\n    VALUES (${attributePlaceHolder.join(',')})\n  `;\n  \n  const [result, response] = await db.execute(query, obj.getAttributeValues());\n\n  const queryUserOrg = `\n    INSERT INTO UserOrganization (userId, organizationId, createdByUserId)\n    VALUES (?,?,?)\n  `;\n\n  await db.execute(queryUserOrg, [obj.createdBy.id, result.insertId, obj.createdBy.id]);\n}\n\nasync function readAll(criteriaObj = {}) {\n\n  const query = Object.keys(criteriaObj).length\n    ? `SELECT * FROM ${TABLE_NAME} WHERE ` + Object\n      .keys(criteriaObj)\n      .map((column) => `${column}='${criteriaObj[column]}'`)\n      .join(' AND ')\n    : `SELECT * FROM ${TABLE_NAME}`;\n\n  const [rows, response] = await db.execute(query);\n  \n  return await hydrate(rows);\n}\n\nasync function update(obj:ObjectType) {\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => `${TABLE_ATTRIBUTES[index]}=?`);\n  \n  const query = `\n    UPDATE ${TABLE_NAME} \n    SET ${attributePlaceHolder.join(',')}\n    WHERE id = ?\n  `;\n  \n  await db.execute(query, [...obj.getAttributeValues(), obj.id]);\n}\n\nasync function erase(criteriaObj) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceholder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  await db.execute(query, values);\n}\n\nasync function addUser(criteriaObj:{userId:number, organizationId:number, createdByUserId:number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceHolder = keys\n    .map(() => '?')\n    .join(',');\n\n  const query = `\n    INSERT INTO UserOrganization (${keys.join(',')})\n    VALUES (${attributePlaceHolder})\n  `;\n\n  await db.execute(query, values);\n}\n\nasync function eraseUser(criteriaObj:{userId:number, organizationId:number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceholder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM UserOrganization\n    WHERE ${attributePlaceholder}\n  `;\n  \n  await db.execute(query, values);\n}\n\nasync function search(criteriaObj) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceholder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    SELECT * FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  const [rows, response] = await db.execute(query, values);\n\n  return await hydrate(rows);\n}\n\nasync function searchUserOrganization(criteriaObj:{organizationId: number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceHolder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n    const query = `\n      SELECT userId FROM UserOrganization\n      WHERE ${attributePlaceHolder}\n    `;\n\n    const [rows, response] = await db.execute(query, values);\n\n    if (rows.length === 0) {\n      return [];\n    }\n\n    return Promise.all(rows.map(async (row) => {\n      const users = await searchUsers({id: row.userId});\n      return users[0];\n    }));\n}\n\nasync function hydrate(rows:[]) {\n  return Promise.all(rows.map(async ({\n    id,\n    name,\n    description,\n    createdByUserId,\n    updatedByUserId,\n    createdAt,\n    updatedAt,\n  }) => {\n\n    const createdByUsers = await searchUsers({id: createdByUserId});\n    const updatedByUsers = await searchUsers({id: updatedByUserId});\n    const users = await searchUserOrganization({organizationId: id});\n\n    return new Entity({\n      id,\n      name,\n      description,\n      createdBy: createdByUsers[0],\n      updatedBy: updatedByUsers[0],\n      createdAt,\n      updatedAt,\n      users,\n    });\n  }));\n}\n\nexport {\n  addUser,\n  create,\n  erase,\n  eraseUser,\n  readAll,\n  search,\n  update,\n};\n", "import type { RoleType as ObjectType } from '~/model/Role';\nimport { Role as Entity, TABLE_ATTRIBUTES, TABLE_NAME } from '~/model/Role';\nimport { search as searchUser } from '~/model/User';\nimport db from '~/resource/db';\nimport { search as searchOrganization } from '~/resource/Organizations';\n\nasync function create(obj:ObjectType) {\n\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => '?');\n\n  const query = `\n    INSERT INTO ${TABLE_NAME} (${TABLE_ATTRIBUTES.join(',')})\n    VALUES (${attributePlaceHolder.join(',')})\n  `;\n  \n  await db.execute(query, obj.getAttributeValues());\n}\n\nasync function readAll() {\n  const query = `SELECT * FROM ${TABLE_NAME}`;\n  const [rows] = await db.execute(query);\n  \n  return await hydrate(rows);\n}\n\nasync function update(obj:ObjectType) {\n\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => `${TABLE_ATTRIBUTES[index]}=?`);\n  \n  const query = `\n    UPDATE ${TABLE_NAME} \n    SET ${attributePlaceHolder.join(',')}\n    WHERE id = ?\n  `;\n  \n  await db.execute(query, [...obj.getAttributeValues(), obj.id]);\n}\n\nasync function erase(criteriaObj) {\n\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  await db.execute(query, Object.values(criteriaObj));\n}\n\nasync function search(criteriaObj) {\n\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    SELECT * FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  const [rows] = await db.execute(query, Object.values(criteriaObj));\n\n  return await hydrate(rows);\n}\n\nasync function hydrate(rows) {\n  return Promise.all(rows.map(async ({\n    id,\n    name,\n    description,\n    organizationId,\n    createdByUserId,\n    updatedByUserId,\n    createdAt,\n    updatedAt,\n  }) => {\n\n    const organizations = await searchOrganization({id: organizationId});\n    const createdByUsers = await searchUser({id: createdByUserId});\n    const updatedByUsers = await searchUser({id: updatedByUserId});\n\n    return new Entity({\n      id,\n      name,\n      description,\n      organization: organizations[0],\n      createdBy: createdByUsers[0],\n      updatedBy: updatedByUsers[0],\n      createdAt,\n      updatedAt,\n    });\n  }));\n}\n\nexport {\n  create,\n  readAll,\n  update,\n  erase,\n  search,\n};\n", "import {\n  create as createRole, erase as eraseRole,\n  search as searchRole, update as updateRole\n} from '~/resource/Roles';\nimport type { OrganizationType } from './Organization';\nimport type { UserType } from './User';\n\nconst TABLE_NAME = 'Roles';\n\nconst TABLE_ATTRIBUTES = [\n  'name',\n  'description',\n  'organizationId',\n  'createdByUserId',\n  'updatedByUserId',\n];\n\ninterface RoleType {\n  id: number;\n  name: string;\n  description: string;\n  organization: OrganizationType;\n  createdBy: UserType;\n  updatedBy: UserType;\n  getAttributeValues: () => [];\n  create: () => RoleType;\n  udpate: () => RoleType;\n}\n\nfunction Role(obj:RoleType) {\n  return this.set(obj);\n}\n\nfunction getAttributeValues() {\n  return TABLE_ATTRIBUTES.map((attribute) => {\n    switch (attribute) {\n      case 'organizationId': return this.organization.id;\n      case 'createdByUserId': return this.createdBy.id;\n      case 'updatedByUserId': return this.updatedBy.id;\n      default: return this[attribute];\n    }\n  });\n}\n\nfunction set(obj) {\n  Object\n    .keys(obj)\n    .forEach((attribute) => this[attribute] = obj[attribute]);\n  \n  return this;\n}\n\nasync function create() {\n  await createRole(this);\n  return this;\n}\n\nasync function search(criteriaObj) {\n  return await searchRole(criteriaObj);\n}\n\nasync function update() {\n  await updateRole(this);\n  return this;\n}\n\nasync function erase(criteriaObj) {\n  await eraseRole(criteriaObj);\n}\n\nObject.assign(\n  Role.prototype,\n  {\n    getAttributeValues,\n    set,\n    create,\n    update,\n  }\n);\n\nexport {\n  Role,\n  TABLE_NAME,\n  TABLE_ATTRIBUTES,\n  search,\n  erase,\n};\nexport type { RoleType };\n\n", "import { Project as Entity, TABLE_ATTRIBUTES, TABLE_NAME } from '~/model/Project';\nimport { search as searchOrganization } from '~/model/Organization';\nimport { search as searchUser } from '~/model/User';\nimport { search as searchUsers } from '~/model/User';\nimport db from '~/resource/db';\nimport type { ProjectType as ObjectType } from '~/model/Project';\n\nconst getObjectKeyValues = (obj) => {\n  const keys = Object.keys(obj);\n  const values = keys.map(key => `${obj[key]}`);\n  return {\n    keys,\n    values,\n  }\n}\n\nasync function create(obj:ObjectType) {\n\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => '?');\n\n  const query = `\n    INSERT INTO ${TABLE_NAME} (${TABLE_ATTRIBUTES.join(',')})\n    VALUES (${attributePlaceHolder.join(',')})\n  `;\n\n  await db.execute(query, obj.getAttributeValues());\n}\n\nasync function readAll() {\n  const query = `SELECT * FROM ${TABLE_NAME}`;\n  const [rows] = await db.execute(query);\n  \n  return await hydrate(rows);\n}\n\nasync function update(obj:ObjectType) {\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => `${TABLE_ATTRIBUTES[index]}=?`);\n  \n  const query = `\n    UPDATE ${TABLE_NAME} \n    SET ${attributePlaceHolder.join(',')}\n    WHERE id = ?\n  `;\n  \n  await db.execute(query, [...obj.getAttributeValues(), obj.id]);\n}\n\nasync function erase(criteriaObj) {\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  await db.execute(query, Object.values(criteriaObj));\n}\n\nasync function addUser(criteriaObj:{userId:number, projectId:number, createdByUserId:number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceHolder = keys\n    .map(() => '?')\n    .join(',');\n\n  const query = `\n    INSERT INTO UserProject (${keys.join(',')})\n    VALUES (${attributePlaceHolder})\n  `;\n\n  await db.execute(query, values);\n}\n\nasync function eraseUser(criteriaObj:{userId:number, projectId:number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceholder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM UserProject\n    WHERE ${attributePlaceholder}\n  `;\n  \n  await db.execute(query, values);\n}\n\nasync function search(criteriaObj) {\n\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    SELECT * FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  const [rows] = await db.execute(query, Object.values(criteriaObj));\n  return await hydrate(rows);\n}\n\nasync function searchUserProject(criteriaObj) {\n  const { keys, values } = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceHolder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n    const query = `\n      SELECT userId FROM UserProject\n      WHERE ${attributePlaceHolder}\n    `;\n\n    const [rows, response] = await db.execute(query, values);\n\n    if (rows.length === 0) {\n      return [];\n    }\n\n    return Promise.all(rows.map(async (row) => {\n      const users = await searchUsers({id: row.userId});\n      return users[0];\n    }));\n}\n\nasync function hydrate(rows) {\n  return Promise.all(rows.map(async ({\n    id,\n    name,\n    description,\n    organizationId,\n    createdByUserId,\n    updatedByUserId,\n    createdAt,\n    updatedAt,\n  }) => {\n\n    const organization = await searchOrganization({id: organizationId});\n    const createdByUsers = await searchUser({id: createdByUserId});\n    const updatedByUsers = await searchUser({id: updatedByUserId});\n    const users = await searchUserProject({projectId: id});\n\n    return new Entity({\n      id,\n      name,\n      description,\n      organization: organization[0],\n      createdBy: createdByUsers[0],\n      updatedBy: updatedByUsers[0],\n      createdAt,\n      updatedAt,\n      users,\n    });\n  }));\n}\n\nexport {\n  create,\n  readAll,\n  update,\n  erase,\n  addUser,\n  eraseUser,\n  search,\n};\n", "import {\n  create as createProject, erase as eraseProject,\n  search as searchProject, update as updateProject\n} from '~/resource/Projects';\nimport type { OrganizationType } from './Organization';\nimport type { UserType } from './User';\n\nconst TABLE_NAME = 'Projects';\n\nconst TABLE_ATTRIBUTES = [\n  'name',\n  'description',\n  'organizationId',\n  'createdByUserId',\n  'updatedByUserId',\n];\n\ninterface ProjectType {\n  id: number;\n  name: string;\n  description: string;\n  organization: OrganizationType;\n  createdBy: UserType;\n  updatedBy: UserType;\n  getAttributeValues: () => [];\n  create: () => ProjectType;\n  udpate: () => ProjectType;\n}\n\nfunction Project(obj:ProjectType) {\n  return this.set(obj);\n}\n\nfunction getAttributeValues() {\n  return TABLE_ATTRIBUTES.map((attribute) => {\n    switch (attribute) {\n      case 'organizationId': return this.organization.id;\n      case 'createdByUserId': return this.createdBy.id;\n      case 'updatedByUserId': return this.updatedBy.id;\n      default: return this[attribute];\n    }\n  });\n}\n\nfunction set(obj) {\n  Object\n    .keys(obj)\n    .forEach((attribute) => this[attribute] = obj[attribute]);\n  \n  return this;\n}\n\nasync function create() {\n  await createProject(this);\n  return this;\n}\n\nasync function search(criteriaObj) {\n  const rows = await searchProject(criteriaObj);\n  return rows.map((row) => new Project(row));\n}\n\nasync function update() {\n  await updateProject(this);\n  return this;\n}\n\nasync function erase(criteriaObj) {\n  await eraseProject(criteriaObj);\n}\n\nObject.assign(\n  Project.prototype,\n  {\n    getAttributeValues,\n    set,\n    create,\n    update,\n  }\n);\n\nexport {\n  Project,\n  TABLE_NAME,\n  TABLE_ATTRIBUTES,\n  search,\n  erase,\n};\nexport type { ProjectType };\n\n", "import { search as searchUser } from '~/model/User';\nimport { TABLE_ATTRIBUTES, TABLE_NAME, Topic as Entity } from '~/model/Topic';\nimport { search as searchProjects } from '~/model/Project';\nimport db from '~/resource/db';\nimport type { TopicType as ObjectType } from '~/model/Topic';\n\nconst getObjectKeyValues = (obj) => {\n  const keys = Object.keys(obj);\n  const values = keys.map(key => `${obj[key]}`);\n  return {\n    keys,\n    values,\n  }\n}\n\nasync function create(obj:ObjectType) {\n\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => '?');\n\n  const query = `\n    INSERT INTO ${TABLE_NAME} (${TABLE_ATTRIBUTES.join(',')})\n    VALUES (${attributePlaceHolder.join(',')})\n  `;\n  \n  await db.execute(query, obj.getAttributeValues());\n}\n\nasync function readAll() {\n  const query = `SELECT * FROM ${TABLE_NAME}`;\n  const [rows] = await db.execute(query);\n  \n  return await hydrate(rows);\n}\n\nasync function update(obj:ObjectType) {\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => `${TABLE_ATTRIBUTES[index]}=?`);\n  \n  const query = `\n    UPDATE ${TABLE_NAME} \n    SET ${attributePlaceHolder.join(',')}\n    WHERE id = ?\n  `;\n  \n  await db.execute(query, [...obj.getAttributeValues(), obj.id]);\n}\n\nasync function erase(criteriaObj) {\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  await db.execute(query, Object.values(criteriaObj));\n}\n\nasync function addProject(criteriaObj:{projectId:number, topicId:number, createdByUserId:number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceHolder = keys\n    .map(() => '?')\n    .join(',');\n\n  const query = `\n    INSERT INTO ProjectTopic (${keys.join(',')})\n    VALUES (${attributePlaceHolder})\n  `;\n\n  await db.execute(query, values);\n}\n\nasync function eraseProject(criteriaObj:{projectId:number, topicId:number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceholder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM ProjectTopic\n    WHERE ${attributePlaceholder}\n  `;\n  \n  await db.execute(query, values);\n}\n\nasync function search(criteriaObj) {\n\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    SELECT * FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  const [rows] = await db.execute(query, Object.values(criteriaObj));\n  return await hydrate(rows);\n}\n\nasync function searchProjectTopic(criteriaObj:{organizationId: number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceHolder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n    const query = `\n      SELECT projectId FROM ProjectTopic\n      WHERE ${attributePlaceHolder}\n    `;\n\n    const [rows, response] = await db.execute(query, values);\n\n    if (rows.length === 0) {\n      return [];\n    }\n\n    return Promise.all(rows.map(async (row) => {\n      const projects = await searchProjects({id: row.projectId});\n      return projects[0];\n    }));\n}\n\nasync function hydrate(rows) {\n  return Promise.all(rows.map(async ({\n    id,\n    name,\n    description,\n    createdByUserId,\n    updatedByUserId,\n    createdAt,\n    updatedAt,\n  }) => {\n\n    const createdByUsers = await searchUser({id: createdByUserId});\n    const updatedByUsers = await searchUser({id: updatedByUserId});\n    const projects = await searchProjectTopic({topicId: id});\n\n    return new Entity({\n      id,\n      name,\n      description,\n      createdBy: createdByUsers[0],\n      updatedBy: updatedByUsers[0],\n      createdAt,\n      updatedAt,\n      projects,\n    });\n  }));\n}\n\nexport {\n  create,\n  readAll,\n  update,\n  erase,\n  addProject,\n  eraseProject,\n  search,\n};\n", "import {\n  create as createTopic, erase as eraseTopic,\n  search as searchTopic, update as updateTopic\n} from '~/resource/Topics';\nimport type { UserType } from './User';\n\nconst TABLE_NAME = 'Topics';\n\nconst TABLE_ATTRIBUTES = [\n  'name',\n  'description',\n  'createdByUserId',\n  'updatedByUserId',\n];\n\ninterface TopicType {\n  id: number;\n  name: string;\n  description: string;\n  createdBy: UserType;\n  updatedBy: UserType;\n  getAttributeValues: () => [];\n  create: () => TopicType;\n  udpate: () => TopicType;\n}\n\nfunction Topic(obj:TopicType) {\n  return this.set(obj);\n}\n\nfunction getAttributeValues() {\n  return TABLE_ATTRIBUTES.map((attribute) => {\n    switch (attribute) {\n      case 'createdByUserId': return this.createdBy.id;\n      case 'updatedByUserId': return this.updatedBy.id;\n      case 'assignedToUserId': return this.assignedTo.id;\n      default: return this[attribute];\n    }\n  });\n}\n\nfunction set(obj) {\n  Object\n    .keys(obj)\n    .forEach((attribute) => this[attribute] = obj[attribute]);\n  \n  return this;\n}\n\nasync function create() {\n  await createTopic(this);\n  return this;\n}\n\nasync function search(criteriaObj) {\n  const rows = await searchTopic(criteriaObj);\n  return rows.map((row) => new Topic(row));\n}\n\nasync function update() {\n  await updateTopic(this);\n  return this;\n}\n\nasync function erase(criteriaObj) {\n  await eraseTopic(criteriaObj);\n}\n\nObject.assign(\n  Topic.prototype,\n  {\n    getAttributeValues,\n    set,\n    create,\n    update,\n  }\n);\n\nexport {\n  Topic,\n  TABLE_NAME,\n  TABLE_ATTRIBUTES,\n  search,\n  erase,\n};\nexport type { TopicType };\n\n", "import type { UserType as ObjectType } from '~/model/User';\nimport { TABLE_ATTRIBUTES, TABLE_NAME, User as Entity } from '~/model/User';\nimport { search as searchRole } from '~/model/Role';\nimport { search as searchOrg } from '~/model/Organization';\nimport { search as searchProj } from '~/model/Project';\nimport { search as searchTop } from '~/model/Topic';\nimport db from './db';\n\nconst getObjectKeyValues = (obj) => {\n  const keys = Object.keys(obj);\n  const values = keys.map(key => obj[key]);\n  return {\n    keys,\n    values,\n  };\n}\n\nasync function create(obj:ObjectType) {\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => '?');\n\n  const query = `\n    INSERT INTO ${TABLE_NAME} (${TABLE_ATTRIBUTES.join(',')})\n    VALUES (${attributePlaceHolder.join(',')})\n  `;\n  \n  await db.execute(query, obj.getAttributeValues());\n}\n\nasync function readAll() {\n  const query = `SELECT * FROM ${TABLE_NAME}`;\n  const [rows] = await db.execute(query);\n  \n  return await hydrate(rows);\n}\n\nasync function update(obj:ObjectType) {\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => `${TABLE_ATTRIBUTES[index]}=?`);\n  \n  const query = `\n    UPDATE ${TABLE_NAME} \n    SET ${attributePlaceHolder.join(',')}\n    WHERE id = ?\n  `;\n  \n  await db.execute(query, [...obj.getAttributeValues(), obj.id]);\n}\n\nasync function erase(criteriaObj) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceholder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  await db.execute(query, values);\n}\n\nasync function search(criteriaObj) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceholder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    SELECT * FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  const [rows] = await db.execute(query, values);\n  \n  return await hydrate(rows);\n}\n\nasync function searchRoles(criteriaObj: {userId: number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceHolder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n    const query = `\n      SELECT roleId FROM UserRole\n      WHERE ${attributePlaceHolder}\n    `;\n\n    const [rows, response] = await db.execute(query, values);\n\n    if (rows.length === 0) {\n      return [];\n    }\n\n    return Promise.all(rows.map(async (row) => {\n      const roles = await searchRole({id: row.roleId});\n      return roles[0];\n    }));\n}\n\nasync function searchOrganization(criteriaObj:{userId: number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceHolder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n    const query = `\n      SELECT organizationId FROM UserOrganization\n      WHERE ${attributePlaceHolder}\n      UNION\n      SELECT id AS organizationId FROM Organizations\n      WHERE createdByUserId=${criteriaObj.userId}\n    `;\n\n    const [rows, response] = await db.execute(query, values);\n\n    if (rows.length === 0) {\n      return [];\n    }\n\n    return Promise.all(rows.map(async (row) => {\n      const organizations = await searchOrg({id: row.organizationId});\n      return organizations[0];\n    }));\n}\n\nasync function searchProject(criteriaObj:{userId: number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceHolder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    SELECT projectId FROM UserProject\n    WHERE ${attributePlaceHolder}\n    UNION\n    SELECT id AS projectId FROM Projects\n    WHERE createdByUserId=${criteriaObj.userId}\n  `;\n\n  const [rows, response] = await db.execute(query, values);\n\n  if (rows.length === 0) {\n    return [];\n  }\n\n  return Promise.all(rows.map(async (row) => {\n    const projects = await searchProj({id: row.projectId});\n    return projects[0];\n  }));\n}\n\nasync function searchTopic(criteriaObj:{userId: number}) {\n  const query = `\n    SELECT pt.topicId FROM ProjectTopic pt\n    INNER JOIN UserProject up ON up.projectId = pt.projectId\n    WHERE up.userId=?\n    UNION\n    SELECT id AS topicId FROM Topics\n    WHERE createdByUserId=?\n  `;\n\n  console.log('query:', query);\n\n  const strUserId = `${criteriaObj.userId}`;\n  const [rows, response] = await db.execute(query, [strUserId, strUserId]);\n\n  if (rows.length === 0) {\n    return [];\n  }\n\n  return Promise.all(rows.map(async (row) => {\n    const topics = await searchTop({id: row.topicId});\n    return topics[0];\n  }));\n}\n\nasync function hydrate(rows) {\n  return Promise.all(rows.map(async ({\n    id,\n    name,\n    email,\n    hashPassword,\n    createdAt,\n    updatedAt,\n  }) => {\n    return new Entity({\n      id,\n      name,\n      email,\n      hashPassword,\n      createdAt,\n      updatedAt,\n    });\n  }));\n}\n\nexport {\n  create,\n  readAll,\n  update,\n  erase,\n  search,\n  searchRoles,\n  searchOrganization,\n  searchProject,\n  searchTopic,\n};\n", "import {\n  create as createUser, erase as eraseUser,\n  search as searchUser, update as updateUser,\n  searchOrganization as searchUserOrganization,\n  searchRoles as searchUserRoles,\n  searchProject as searchUserProject,\n  searchTopic as searchUserTopic,\n} from '~/resource/Users';\nimport { RoleType } from './Role';\nimport { OrganizationType } from './Organization';\nimport { TopicType } from './Topic';\n\nconst TABLE_NAME = 'Users';\n\nconst TABLE_ATTRIBUTES = [\n  'name',\n  'email',\n  'hashPassword',\n];\n\ntype UserType = {\n  id: number;\n  name: string;\n  email: string;\n  hashPassword: string;\n  getAttributeValues: () => [];\n  create: () => UserType;\n  udpate: () => UserType;\n}\n\nfunction User(obj:UserType) {\n  return this.set(obj);\n}\n\nfunction getAttributeValues() {\n  return TABLE_ATTRIBUTES.map((attribute) => this[attribute]);\n}\n\nfunction set(obj) {\n  Object\n    .keys(obj)\n    .forEach((attribute) => this[attribute] = obj[attribute]);\n  \n  return this;\n}\n\nasync function create() {\n  try {\n    await createUser(this);\n  } catch(error) {\n    console.error('createUser error:', error);    \n  }\n  return this;\n}\n\nasync function search(criteriaObj:UserType) {\n  try {\n    return await searchUser(criteriaObj);\n  } catch(error) {\n    console.error('searchUser error:', error);\n    return [];\n  }\n}\n\nasync function update() {\n  try {\n    await updateUser(this);\n  } catch(error) {\n    console.error('updateUser error:', error);\n  }\n  return this;\n}\n\nfunction roles():Promise<RoleType[]> {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const roles = await searchUserRoles({userId: this.id});\n      resolve(roles);\n    } catch(error) {\n      reject(error);\n    }\n  });\n}\n\nasync function erase(criteriaObj) {\n  try {\n    await eraseUser(criteriaObj);\n  } catch(error) {\n    console.error('eraseUser error:', error);\n  }\n}\n\nasync function searchOrganization(criteriaObj:{userId:number}):Promise<OrganizationType[]> {\n  try {\n    return await searchUserOrganization(criteriaObj);\n  } catch(error) {\n    console.error('searchUserOrganization error:', error);\n    return [];\n  }\n}\n\nasync function searchProject(criteriaObj:{userId:number}):Promise<OrganizationType[]> {\n  try {\n    return await searchUserProject(criteriaObj);\n  } catch(error) {\n    console.error('searchUserProject error:', error);\n    return [];\n  }\n}\n\nconst searchTopic = async(criteriaObj:{userId:number}):Promise<TopicType[]> => {\n  try {\n    return await searchUserTopic(criteriaObj);\n  } catch(error) {\n    console.error('searchUserTopics error:', error);\n    return [];\n  }\n}\n\nObject.assign(\n  User.prototype,\n  {\n    getAttributeValues,\n    set,\n    create,\n    update,\n    roles,\n  }\n);\n\nexport {\n  User,\n  TABLE_NAME,\n  TABLE_ATTRIBUTES,\n  search,\n  erase,\n  searchOrganization,\n  searchProject,\n  searchTopic,\n};\nexport type { UserType };\n\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { erase as eraseTaskStatus, search as searchTaskStatus } from '~/model/TaskStatus';\n\nexport default function DeleteTaskStatus() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n  return (<>\n    <hgroup>\n      <h1>TaskStatus</h1>\n      <h2>Delete TaskStatus</h2>\n    </hgroup>\n    <table role='grid'>\n      <tbody>\n        <tr>\n          <th scope='row'>name:</th>\n          <td>{data.name}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>description:</b></th>\n          <td>{data.description}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>created by:</b></th>\n          <td>{data.createdBy.name} at {data.createdAt}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>last updated by:</b></th>\n          <td>{data.updatedBy.name} at {data.updatedAt}</td>\n        </tr>\n      </tbody>\n    </table>\n    <Form method='post'>\n      <button\n        tabIndex={1}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {isSubmitting ? 'submitting...' : 'delete'}\n      </button>\n    </Form>\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchTaskStatus({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  await eraseTaskStatus({id: params.id});\n  return redirect('/taskstatus')\n}", "import type { TaskStatusType as ObjectType } from '~/model/TaskStatus';\nimport { TABLE_ATTRIBUTES, TABLE_NAME, TaskStatus as Entity } from '~/model/TaskStatus';\nimport { search as searchUser } from '~/model/User';\nimport db from '~/resource/db';\n\nasync function create(obj:ObjectType) {\n\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => '?');\n\n  const query = `\n    INSERT INTO ${TABLE_NAME} (${TABLE_ATTRIBUTES.join(',')})\n    VALUES (${attributePlaceHolder.join(',')})\n  `;\n  \n  await db.execute(query, obj.getAttributeValues());\n}\n\nasync function readAll() {\n  const query = `SELECT * FROM ${TABLE_NAME}`;\n  const [rows] = await db.execute(query);\n  \n  return await hydrate(rows);\n}\n\nasync function update(obj:ObjectType) {\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => `${TABLE_ATTRIBUTES[index]}=?`);\n  \n  const query = `\n    UPDATE ${TABLE_NAME} \n    SET ${attributePlaceHolder.join(',')}\n    WHERE id = ?\n  `;\n  \n  await db.execute(query, [...obj.getAttributeValues(), obj.id]);\n}\n\nasync function erase(criteriaObj) {\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  await db.execute(query, Object.values(criteriaObj));\n}\n\nasync function search(criteriaObj) {\n\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    SELECT * FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  const [rows] = await db.execute(query, Object.values(criteriaObj));\n  return await hydrate(rows);\n}\n\nasync function hydrate(rows) {\n  return Promise.all(rows.map(async ({\n    id,\n    name,\n    color,\n    description,\n    createdByUserId,\n    updatedByUserId,\n    createdAt,\n    updatedAt,\n  }) => {\n\n    const createdByUsers = await searchUser({id: createdByUserId});\n    const updatedByUsers = await searchUser({id: updatedByUserId});\n\n    return new Entity({\n      id,\n      name,\n      color,\n      description,\n      createdBy: createdByUsers[0],\n      updatedBy: updatedByUsers[0],\n      createdAt,\n      updatedAt,\n    });\n  }));\n}\n\nexport {\n  create,\n  readAll,\n  update,\n  erase,\n  search,\n};\n", "import {\n  create as createTaskStatus, erase as eraseTaskStatus,\n  search as searchTaskStatus, update as updateTaskStatus\n} from '~/resource/TaskStatus';\nimport type { UserType } from './User';\n\nconst TABLE_NAME = 'TaskStatus';\n\nconst TABLE_ATTRIBUTES = [\n  'name',\n  'color',\n  'description',\n  'createdByUserId',\n  'updatedByUserId',\n];\n\ninterface TaskStatusType {\n  id: number;\n  name: string;\n  color: string;\n  description: string;\n  createdBy: UserType;\n  updatedBy: UserType;\n  getAttributeValues: () => [];\n  create: () => TaskStatusType;\n  udpate: () => TaskStatusType;\n}\n\nfunction TaskStatus(obj:TaskStatusType) {\n  return this.set(obj);\n}\n\nfunction getAttributeValues() {\n  return TABLE_ATTRIBUTES.map((attribute) => {\n    switch (attribute) {\n      case 'createdByUserId': return this.createdBy.id;\n      case 'updatedByUserId': return this.updatedBy.id;\n      default: return this[attribute];\n    }\n  });\n}\n\nfunction set(obj) {\n  Object\n    .keys(obj)\n    .forEach((attribute) => this[attribute] = obj[attribute]);\n  \n  return this;\n}\n\nasync function create() {\n  await createTaskStatus(this);\n  return this;\n}\n\nasync function search(criteriaObj) {\n  const rows = await searchTaskStatus(criteriaObj);\n  return rows.map((row) => new TaskStatus(row));\n}\n\nasync function update() {\n  await updateTaskStatus(this);\n  return this;\n}\n\nasync function erase(criteriaObj) {\n  await eraseTaskStatus(criteriaObj);\n}\n\nObject.assign(\n  TaskStatus.prototype,\n  {\n    getAttributeValues,\n    set,\n    create,\n    update,\n  }\n);\n\nexport {\n  TaskStatus,\n  TABLE_NAME,\n  TABLE_ATTRIBUTES,\n  search,\n  erase,\n};\nexport type { TaskStatusType };\n\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { search as searchTaskStatus } from '~/model/TaskStatus';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport TaskStatusForm from '~/ui-components/TaskStatusForm';\n\nexport default function UpdateTaskStatus() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n\n  return (<>\n    <hgroup>\n      <h1>Task Status</h1>\n      <h2>Update Task Status</h2>\n    </hgroup>\n    <TaskStatusForm {...data} isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchTaskStatus({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, color, description } = sanitizeData({formData: await request.formData()});\n\n  const objs = await searchTaskStatus({id: params.id});\n  objs[0]\n    .set({\n      name,\n      color,\n      description,\n      updatedBy: user,\n    })\n    .update();\n\n  return redirect('/taskstatus')\n}", "import DOMPurify from 'isomorphic-dompurify';\n\nfunction sanitizeData({formData}) {\n  const rawData = Object.fromEntries(formData);\n  return Object\n    .keys(rawData)\n    .reduce((acc, key) => {\n      acc[key] = DOMPurify\n        .sanitize(rawData[key])\n        .trim();\n      return acc;\n    }, {});\n}\n\nexport { sanitizeData };\n", "import { Form } from '@remix-run/react';\nimport FieldsetLegend from './FieldsetLegend';\nimport LabelInput from './LabelInput';\nimport LabelTextarea from './LabelTextarea';\nimport LabelColor from './LabelColor';\n\nexport default function TaskStatusForm({\n  children = <></>,\n  description = '',\n  isSubmitting = false,\n  name = '',\n  color = '#FFFFFF'\n}) {\n  const isToCreate = !name && !description;\n\n  return (\n    <Form method='post'>\n      <FieldsetLegend title='task status details'>\n        <LabelInput\n          defaultValue={name}\n          name='name'\n          placeholder='task status name'\n          required={true}\n          tabIndex={1}\n          type='text'\n        />\n        <LabelColor\n          name='color'\n          required={true}\n          tabIndex={2}\n          defaultValue={color}\n        />\n        <LabelTextarea\n          defaultValue={description}\n          name='description'\n          placeholder='enter description of the task status'\n          required={false}\n          tabIndex={3}\n        />\n      </FieldsetLegend>\n      { children }\n      <button\n        tabIndex={4}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {getButtonName(isToCreate, isSubmitting)}\n      </button>\n    </Form>\n  );\n}\n\nconst getButtonName = (isToCreate, isSubmitting) => {\n  if (isToCreate) {\n    return isSubmitting\n      ? 'submitting ...'\n      : 'create';\n  }\n\n  return isSubmitting\n    ? 'updating ...'\n    : 'update';\n};\n", "export default function FieldsetLegend({\n  title = '',\n  children,\n}) {\n  return (<fieldset>\n    <legend>{title}</legend>\n    {children}\n  </fieldset>);\n}", "export default function LabelInput({\n  name = '',\n  placeholder = '',\n  required = false,\n  tabIndex = 0,\n  type = 'text',\n  defaultValue = '',\n}) {\n  const id = `input-${name}`;\n  const displayName = name.split('-').join(' ');\n  return (<>\n    <label htmlFor={id}>{displayName}</label>\n    <input\n      id={id}\n      name={name}\n      placeholder={placeholder}\n      required={required}\n      tabIndex={tabIndex}\n      type={type}\n      defaultValue={defaultValue}\n    />\n  </>);\n}", "export default function LabelTextarea({\n  cols = 30,\n  defaultValue = '',\n  name = '',\n  placeholder = '',\n  required = false,\n  rows = 10,\n  tabIndex = 0,\n}) {\n  const id = `input-${name}`;\n  return (<>\n    <label htmlFor={id}>{name}</label>\n    <textarea\n      cols={cols}\n      defaultValue={defaultValue}\n      id={id}\n      name={name}\n      placeholder={placeholder}\n      required={required}\n      rows={rows}\n      tabIndex={tabIndex}\n    >\n    </textarea>\n  </>);\n}", "export default function LabelColor({\n    name = '',\n    required = false,\n    tabIndex = 0,\n    defaultValue = '#FFFFFF',\n  }) {\n    const id = `input-${name}`;\n    const displayName = name.split('-').join(' ');\n    return (<>\n      <label htmlFor={id}>{displayName}</label>\n      <input\n        id={id}\n        name={name}\n        required={required}\n        tabIndex={tabIndex}\n        type='color'\n        defaultValue={defaultValue}\n      />\n    </>);\n  }", "import type { ActionFunction, MetaFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport {\n  useTransition as useNavigation\n} from '@remix-run/react';\nimport bcrypt from 'bcryptjs';\nimport { User } from '~/model/User';\nimport { sanitizeData } from '~/sanitizerForm';\nimport UserForm from '~/ui-components/UserForm';\n\n\nexport default function CreateAnAccount() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  return (<>\n    <h2>Create an account</h2>\n    <UserForm isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { name, email, password } = sanitizeData({formData: await request.formData()});\n  const hashPassword = await bcrypt.hash(password, 10);\n  const user = new User({\n    name,\n    email,\n    hashPassword,\n  });\n  \n  await user.create();\n  \n  return redirect('/sign-in');\n};\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Create an account - Team Task Manager',\n    description: 'Create an account page',\n  };\n};", "import { Form } from '@remix-run/react';\nimport FieldsetLegend from './FieldsetLegend';\nimport LabelInput from './LabelInput';\n\nexport default function UserForm({\n  name = '',\n  email = '',\n  isSubmitting = false,\n  children = <></>,\n}) {\n  const isToCreate = !name && !email;\n\n  return (\n    <Form method='post'>\n      <FieldsetLegend title='user details'>\n        <LabelInput\n          defaultValue={name}\n          name='name'\n          placeholder='full name'\n          required={true}\n          tabIndex={1}\n          type='text'\n        />\n        <LabelInput\n          defaultValue={email}\n          name='email'\n          placeholder='email'\n          required={true}\n          tabIndex={2}\n          type='email'\n        />\n        <LabelInput\n          name='password'\n          placeholder='password'\n          required={true}\n          tabIndex={3}\n          type='password'\n        />\n        <LabelInput\n          name='confirm-password'\n          placeholder='confirm password'\n          required={true}\n          tabIndex={4}\n          type='password'\n        />\n      </FieldsetLegend>\n      { children }\n      <button\n        tabIndex={5}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {getButtonName(isToCreate, isSubmitting)}\n      </button>\n    </Form>\n  );\n}\n\nconst getButtonName = (isToCreate, isSubmitting) => {\n  if (isToCreate) {\n    return isSubmitting\n      ? 'submitting ...'\n      : 'create';\n  }\n\n  return isSubmitting\n    ? 'updating ...'\n    : 'update';\n};\n", "import type { ActionFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport {\n  useTransition as useNavigation\n} from '@remix-run/react';\nimport { TaskStatus } from '~/model/TaskStatus';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport TaskStatusForm from '~/ui-components/TaskStatusForm';\n\nexport default function CreateTopic() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  \n  return (<>\n    <hgroup>\n      <h1>Task Status</h1>\n      <h2>Create Task Status</h2>\n    </hgroup>\n    <TaskStatusForm isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description } = sanitizeData({formData: await request.formData()});\n  \n  const taskStatus = new TaskStatus({\n    name,\n    description,\n    createdBy: user,\n    updatedBy: user,\n  });\n\n  await taskStatus.create();\n  \n  return redirect('/taskstatus');\n}", "import type { LoaderArgs, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { UserType } from '~/model/User';\nimport { readAll as readAllTaskStatus } from '~/resource/TaskStatus';\nimport { CreateNavLink, DeleteNavLink, UpdateNavLink } from '~/ui-components/BasicNavLink';\n\ntype DataPropType = {\n  id: number,\n  name: string,\n  color: string,\n  description: string,\n  createdBy: UserType,\n  updatedBy: UserType,\n}\n\ntype RowPropType = {\n  data: DataPropType[];\n}\n\nexport default function AllTaskStatus() {\n  const rows = useLoaderData<typeof loader>();\n\n  return (<>\n    <hgroup>\n      <h1>Task Status</h1>\n      <h2>All Task Status</h2>\n    </hgroup>\n    <table role='grid'>\n      <thead>\n        <tr>\n          <th scope='col'>#</th>\n          <th scope='col'>name</th>\n          <th scope='col'>description</th>\n          <th scope='col'>created by</th>\n          <th scope='col'>last updated by</th>\n          <th scope='col'>&nbsp;</th>\n          <th scope='col'>&nbsp;</th>\n        </tr>\n      </thead>\n      <Rows data={rows}/>\n    </table>\n    <CreateNavLink role='button' to='./create' text='Create Task Status'/>\n  </>);\n}\n\nconst Rows = ({data}:RowPropType) => {\n  return (<tbody>\n    {\n      data.map((\n        {\n          id,\n          name,\n          color,\n          description,\n          createdBy,\n          updatedBy,\n        }:DataPropType,\n        index:number\n      ) => {\n        return (<tr key={id}>\n          <th scope='row'>{index + 1}</th>\n          <td><mark style={{ backgroundColor: color }}>{name}</mark></td>\n          <td>{description}</td>\n          <td>{createdBy.name}</td>\n          <td>{updatedBy.name}</td>\n          <td><UpdateNavLink to={`./update/${id}`}/></td>\n          <td><DeleteNavLink to={`./delete/${id}`}/></td>\n        </tr>);\n      })\n    }\n  </tbody>);\n};\n\nexport const loader:LoaderFunction = async({ params }:LoaderArgs) => {\n  const rows = await readAllTaskStatus();\n  return json(rows);\n}\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Task Status - Team Task Manager',\n    description: 'Task Status page',\n  };\n};", "import { LinksFunction } from '@remix-run/node';\nimport { Outlet } from '@remix-run/react';\nimport summaryWithControlButtonStyle from '~/styles/summary-control.css';\n\nexport default function Organizations() {\n  return <>\n    <Outlet />\n  </>;\n}\n\nexport const links: LinksFunction = () => {\n  return [{\n    rel: 'stylesheet',\n    href: summaryWithControlButtonStyle\n  }];\n};", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { erase as eraseOrganization, search as searchOrganization } from '~/model/Organization';\n\nexport default function DeleteOrganization() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n  return (<>\n    <hgroup>\n      <h1>Organizations</h1>\n      <h2>Delete organization?</h2>\n    </hgroup>\n    <table role='grid'>\n      <tbody>\n        <tr>\n          <th scope='row'><b>name:</b></th>\n          <td>{data.name}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>description:</b></th>\n          <td>{data.description}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>created by:</b></th>\n          <td>{data.createdBy.name} at {data.createdAt}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>last updated by:</b></th>\n          <td>{data.updatedBy.name} at {data.updatedAt}</td>\n        </tr>\n      </tbody>\n    </table>\n    <Form method='post'>\n      <button\n        tabIndex={1}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {isSubmitting ? 'submitting...' : 'delete'}\n      </button>\n    </Form>\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchOrganization({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  await eraseOrganization({id: params.id});\n  return redirect('/organizations')\n}", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { search as searchOrganization } from '~/model/Organization';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport OrganizationForm from '~/ui-components/OrganizationForm';\n\nexport default function DeleteOrganization() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n\n  return (<>\n    <hgroup>\n      <h1>Organizations</h1>\n      <h2>Update organization?</h2>\n    </hgroup>\n    <OrganizationForm {...data} isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchOrganization({id: Number(params.id)});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description } = sanitizeData({formData: await request.formData()});\n\n  const objs = await searchOrganization({id: Number(params.id)});\n  objs[0]\n    .set({\n      name,\n      description,\n      updatedBy: user,\n    })\n    .update();\n\n  return redirect('/organizations')\n}", "import { Form } from '@remix-run/react';\nimport FieldsetLegend from './FieldsetLegend';\nimport LabelInput from './LabelInput';\nimport LabelTextarea from './LabelTextarea';\n\nexport default function OrganizationForm({\n  children = <></>,\n  description = '',\n  isSubmitting = false,\n  name = '',\n}) {\n  const isToCreate = !name && !description;\n\n  return (\n    <Form method='post'>\n      <FieldsetLegend title='organization details'>\n        <LabelInput\n          defaultValue={name}\n          name='name'\n          placeholder='organization name'\n          required={true}\n          tabIndex={1}\n          type='text'\n        />\n        <LabelTextarea\n          defaultValue={description}\n          name='description'\n          placeholder='enter description of the organization'\n          required={false}\n          tabIndex={2}\n        />\n      </FieldsetLegend>\n      { children }\n      <button\n        tabIndex={3}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {getButtonName(isToCreate, isSubmitting)}\n      </button>\n    </Form>\n  );\n}\n\nconst getButtonName = (isToCreate, isSubmitting) => {\n  if (isToCreate) {\n    return isSubmitting\n      ? 'submitting ...'\n      : 'create';\n  }\n\n  return isSubmitting\n    ? 'updating ...'\n    : 'update';\n};\n", "import type { ActionFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport {\n  useTransition as useNavigation\n} from '@remix-run/react';\nimport { Organization } from '~/model/Organization';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport OrganizationForm from '~/ui-components/OrganizationForm';\n\nexport default function CreateOrganization() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  \n  return (<>\n    <hgroup>\n      <h1>Organizations</h1>\n      <h2>Create an organization</h2>\n    </hgroup>\n    <OrganizationForm isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description } = sanitizeData({formData: await request.formData()});\n\n  const organization = new Organization({\n    name,\n    description,\n    createdBy: user,\n    updatedBy: user,\n  });\n\n  await organization.create();\n  \n  return redirect('/organizations');\n}", "import type { ActionFunction, LoaderArgs, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { Form, useLoaderData } from '@remix-run/react';\nimport {\n  addUser as addUserIntoOrganization,\n  eraseUser as eraseUserFromOrganization,\n  OrganizationType,\n} from '~/model/Organization';\nimport { UserType, searchOrganization as searchUserOrganization } from '~/model/User';\nimport { readAll as readAllUsers } from '~/resource/Users';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport { CreateNavLink, DeleteNavLink, UpdateNavLink } from '~/ui-components/BasicNavLink';\nimport Chip from '~/ui-components/Chip';\nimport LabelSelect from '~/ui-components/LabelSelect';\n\nconst ACTION_ADD_USER = 'add-user';\nconst ACTION_REMOVE_USER = 'remove-user';\n\ntype RowPropType = {\n  organizations: OrganizationType[];\n  allUsers: UserType[];\n  isManager: boolean;\n}\n\nexport default function AllOrganizations() {\n  const {organizations, allUsers, isManager} = useLoaderData<typeof loader>();\n\n  return (<>\n    <hgroup>\n      <h1>Organizations</h1>\n      <h2>All Organizations</h2>\n    </hgroup>\n    <Rows organizations={organizations} allUsers={allUsers} isManager={isManager}/>\n    {isManager && <CreateNavLink role='button' to='./create' text='Create Organization'/>}\n  </>);\n}\n\nconst UserChips = ({users, organizationId, isManager}:{users:UserType[], organizationId:number, isManager: boolean}) => {\n  return (<>\n    {\n      users.length === 0\n        ? 'there is no user in this organization'\n        : users.map((user) => {\n          return ( \n            <Chip\n              key={user.id}\n              actionName={ACTION_REMOVE_USER}\n              data={{userId: user.id, organizationId}}\n              editable={isManager}\n            >\n              {user.name}\n            </Chip>\n          );\n        })\n    }\n  </>);\n};\n\nconst UserSelectOptions = ({organizationId, allUsers}:{organizationId:number, allUsers:UserType[]}) => {\n  return (\n    <Form method='post'>\n      <input type='hidden' name='organizationId' value={organizationId} />\n      <LabelSelect name={ACTION_ADD_USER} options={allUsers} />\n      <button\n        type='submit'\n        name='_action'\n        value={ACTION_ADD_USER}\n        aria-label={ACTION_ADD_USER}\n      >\n        add\n      </button>\n    </Form>\n  );\n}\n\nconst Rows = ({organizations, allUsers, isManager}:RowPropType) => {\n  return (<>\n    {\n      organizations.map((\n        {\n          id,\n          name,\n          description,\n          createdBy,\n          updatedBy,\n          createdAt,\n          updatedAt,\n          users,\n        }:OrganizationType,\n        index:number\n      ) => {\n        return (\n          <details key={id}>\n            <summary className='with-control-button'>\n              <span>{ index + 1 }. {name}</span>\n              {isManager && <UpdateNavLink to={`./update/${id}`} />}\n              {isManager && <DeleteNavLink to={`./delete/${id}`} />}\n            </summary>\n            <ul>\n              <li>Description: {description}</li>\n              <li>Created by: {createdBy.name} on {createdAt}</li>\n              <li>Last updated by: {updatedBy.name} on {updatedAt}</li>\n              <li>Users: <UserChips users={users} organizationId={id} isManager={isManager}/></li>\n            </ul>\n            {isManager && <UserSelectOptions allUsers={allUsers} organizationId={id}/>}\n          </details>\n        );\n      })\n    }\n  </>);\n};\n\nexport const loader:LoaderFunction = async({ request, params }:LoaderArgs) => {\n  const { user } = await getUserSession(request);\n  const roles = await user?.roles() ?? [];\n  const isManager = roles.some(({name}:{name: String}) => name === 'Manager');\n\n  const userOrganizations = await searchUserOrganization({userId: user.id});\n  const allUsers = await readAllUsers();\n\n  return json({\n    organizations: userOrganizations,\n    allUsers,\n    isManager,\n  });\n};\n\nexport const action:ActionFunction = async({request}) => {\n  const { user } = await getUserSession(request);\n  const {_action, organizationId, ...values} = sanitizeData({formData: await request.formData()});\n  \n  switch (_action) {\n    case ACTION_ADD_USER:\n      await addUserIntoOrganization({\n        createdByUserId: user.id,\n        organizationId,\n        userId: values[ACTION_ADD_USER],\n      });\n      break;\n    case ACTION_REMOVE_USER: \n      await eraseUserFromOrganization({userId: values.userId, organizationId});\n      break;\n    default:\n      break;\n  }\n\n  return null;\n};\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Organizations - Team Task Manager',\n    description: 'Organizations page',\n  };\n};", "import { Form } from '@remix-run/react';\nimport { ReactNode } from 'react';\n\nconst chipStyle = {\n  display: 'inline-block',\n  padding: '0.1rem 1rem',\n  borderRadius: '1rem',\n  margin: '0.1rem',\n  position: 'relative',\n  border: '1px solid',\n  borderColor: 'hsl(195, 85%, 41%)',\n};\n\nconst chipDeleteBtnStyle = {\n  position: 'relative',\n  top: '2px',\n  left: '10px',\n  color: 'hsl(195deg, 85%, 41%)',\n};\n\nconst formStyle = {\n  display: 'inline',\n};\n\nconst buttonStyle = {\n  all: 'unset',\n};\n\ntype PropTypes = {\n  onClick: () => {};\n  children: ReactNode;\n}\n\nexport default function Chip({children, actionName, data, editable = false }) {\n  const keys = Object.keys(data);\n\n  return (\n    <div style={chipStyle}>\n      <span>{children}</span>\n      <Form style={formStyle} method='post'>\n        {\n          keys\n            .map((key) => {\n              return <input key={key} type='hidden' name={key} value={data[key]} />\n            })\n        }\n        {editable \n          && <button\n            style={buttonStyle}\n            type='submit'\n            name='_action'\n            value={actionName}\n            aria-label={actionName}\n          >\n            <i style={chipDeleteBtnStyle} className='lni lni-cross-circle'></i>\n          </button>\n        }\n      </Form>\n    </div>\n  );\n}\n", "export default function LabelSelect({\n  name = '',\n  required = false,\n  tabIndex = 0,\n  defaultValue = '',\n  options = [],\n}) {\n  const id = `input-${name}`;\n  const displayName = name.split('-').join(' ');\n  return (<>\n    <label htmlFor={id}>{displayName}</label>\n    <select\n      id={id}\n      name={name}\n      required={required}\n      tabIndex={tabIndex}\n      defaultValue={defaultValue}\n    >\n      <Options data={options} />\n    </select>\n  </>);\n}\n\nconst Options = ({ data }) => {\n  return data.map(({id, name}) => {\n    return <option\n      key={id}\n      value={id}\n    >{name}</option>\n  });\n}", "import { Outlet } from '@remix-run/react';\n\nexport default function Permissions() {\n  return (<>\n    <Outlet />\n  </>);\n}\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { erase as erasePermission, search as searchPermission } from '~/model/Permission';\n\nexport default function DeletePermission() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n  return (<>\n    <hgroup>\n      <h1>Permissions</h1>\n      <h2>Delete Permission</h2>\n    </hgroup>\n    <table role='grid'>\n      <tbody>\n        <tr>\n          <th scope='row'>name:</th>\n          <td>{data.name}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>description:</b></th>\n          <td>{data.description}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>created by:</b></th>\n          <td>{data.createdBy.name} at {data.createdAt}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>last updated by:</b></th>\n          <td>{data.updatedBy.name} at {data.updatedAt}</td>\n        </tr>\n      </tbody>\n    </table>\n    <Form method='post'>\n      <button\n        tabIndex={1}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {isSubmitting ? 'submitting...' : 'delete'}\n      </button>\n    </Form>\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchPermission({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  await erasePermission({id: params.id});\n  return redirect('/permissions')\n}", "import type { PermissionType as ObjectType } from '~/model/Permission';\nimport { Permission as Entity, TABLE_ATTRIBUTES, TABLE_NAME } from '~/model/Permission';\nimport { search as searchUser } from '~/model/User';\nimport db from '~/resource/db';\n\nasync function create(obj:ObjectType) {\n\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => '?');\n\n  const query = `\n    INSERT INTO ${TABLE_NAME} (${TABLE_ATTRIBUTES.join(',')})\n    VALUES (${attributePlaceHolder.join(',')})\n  `;\n  \n  await db.execute(query, obj.getAttributeValues());\n}\n\nasync function readAll() {\n  const query = `SELECT * FROM ${TABLE_NAME}`;\n  const [rows] = await db.execute(query);\n  \n  return await hydrate(rows);\n}\n\nasync function update(obj:ObjectType) {\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => `${TABLE_ATTRIBUTES[index]}=?`);\n  \n  const query = `\n    UPDATE ${TABLE_NAME} \n    SET ${attributePlaceHolder.join(',')}\n    WHERE id = ?\n  `;\n  \n  await db.execute(query, [...obj.getAttributeValues(), obj.id]);\n}\n\nasync function erase(criteriaObj) {\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  await db.execute(query, Object.values(criteriaObj));\n}\n\nasync function search(criteriaObj) {\n\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    SELECT * FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  const [rows] = await db.execute(query, Object.values(criteriaObj));\n  return await hydrate(rows);\n}\n\nasync function hydrate(rows) {\n  return Promise.all(rows.map(async ({\n    id,\n    name,\n    description,\n    createdByUserId,\n    updatedByUserId,\n    createdAt,\n    updatedAt,\n  }) => {\n\n    const createdByUsers = await searchUser({id: createdByUserId});\n    const updatedByUsers = await searchUser({id: updatedByUserId});\n\n    return new Entity({\n      id,\n      name,\n      description,\n      createdBy: createdByUsers[0],\n      updatedBy: updatedByUsers[0],\n      createdAt,\n      updatedAt,\n    });\n  }));\n}\n\nexport {\n  create,\n  readAll,\n  update,\n  erase,\n  search,\n};\n", "import {\n  create as createPermission, erase as erasePermission,\n  search as searchPermission, update as updatePermission\n} from '~/resource/Permissions';\nimport type { UserType } from './User';\n\nconst TABLE_NAME = 'Permissions';\n\nconst TABLE_ATTRIBUTES = [\n  'name',\n  'description',\n  'createdByUserId',\n  'updatedByUserId',\n];\n\ninterface PermissionType {\n  id: number;\n  name: string;\n  description: string;\n  createdBy: UserType;\n  updatedBy: UserType;\n  getAttributeValues: () => [];\n  create: () => PermissionType;\n  udpate: () => PermissionType;\n}\n\nfunction Permission(obj:PermissionType) {\n  return this.set(obj);\n}\n\nfunction getAttributeValues() {\n  return TABLE_ATTRIBUTES.map((attribute) => {\n    switch (attribute) {\n      case 'createdByUserId': return this.createdBy.id;\n      case 'updatedByUserId': return this.updatedBy.id;\n      default: return this[attribute];\n    }\n  });\n}\n\nfunction set(obj) {\n  Object\n    .keys(obj)\n    .forEach((attribute) => this[attribute] = obj[attribute]);\n  \n  return this;\n}\n\nasync function create() {\n  await createPermission(this);\n  return this;\n}\n\nasync function search(criteriaObj) {\n  const rows = await searchPermission(criteriaObj);\n  return rows.map((row) => new Permission(row));\n}\n\nasync function update() {\n  await updatePermission(this);\n  return this;\n}\n\nasync function erase(criteriaObj) {\n  await erasePermission(criteriaObj);\n}\n\nObject.assign(\n  Permission.prototype,\n  {\n    getAttributeValues,\n    set,\n    create,\n    update,\n  }\n);\n\nexport {\n  Permission,\n  TABLE_NAME,\n  TABLE_ATTRIBUTES,\n  search,\n  erase,\n};\nexport type { PermissionType };\n\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { search as searchPermission } from '~/model/Permission';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport PermissionForm from '~/ui-components/PermissionForm';\n\nexport default function DeletePermission() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n\n  return (<>\n    <hgroup>\n      <h1>Permissions</h1>\n      <h2>Update Permission</h2>\n    </hgroup>\n    <PermissionForm {...data} isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchPermission({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description } = sanitizeData({formData: await request.formData()});\n\n  const objs = await searchPermission({id: params.id});\n  objs[0]\n    .set({\n      name,\n      description,\n      updatedBy: user,\n    })\n    .update();\n\n  return redirect('/permissions')\n}", "import { Form } from '@remix-run/react';\nimport FieldsetLegend from './FieldsetLegend';\nimport LabelInput from './LabelInput';\nimport LabelTextarea from './LabelTextarea';\n\nexport default function PermissionForm({\n  children = <></>,\n  description = '',\n  isSubmitting = false,\n  name = '',\n}) {\n  const isToCreate = !name && !description;\n\n  return (\n    <Form method='post'>\n      <FieldsetLegend title='permission details'>\n        <LabelInput\n          defaultValue={name}\n          name='name'\n          placeholder='permission name'\n          required={true}\n          tabIndex={1}\n          type='text'\n        />\n        <LabelTextarea\n          defaultValue={description}\n          name='description'\n          placeholder='enter description of the permission'\n          required={false}\n          tabIndex={2}\n        />\n      </FieldsetLegend>\n      { children }\n      <button\n        tabIndex={3}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {getButtonName(isToCreate, isSubmitting)}\n      </button>\n    </Form>\n  );\n}\n\nconst getButtonName = (isToCreate, isSubmitting) => {\n  if (isToCreate) {\n    return isSubmitting\n      ? 'submitting ...'\n      : 'create';\n  }\n\n  return isSubmitting\n    ? 'updating ...'\n    : 'update';\n};\n", "import type { ActionFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport {\n  useTransition as useNavigation\n} from '@remix-run/react';\nimport { Permission } from '~/model/Permission';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport PermissionForm from '~/ui-components/PermissionForm';\n\nexport default function CreatePermission() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  \n  return (<>\n    <hgroup>\n      <h1>Permissions</h1>\n      <h2>Create a Permission</h2>\n    </hgroup>\n    <PermissionForm isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description } = sanitizeData({formData: await request.formData()});\n  \n  const permission = new Permission({\n    name,\n    description,\n    createdBy: user,\n    updatedBy: user,\n  });\n  \n  await permission.create();\n  \n  return redirect('/permissions');\n}", "import type { LoaderArgs, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { UserType } from '~/model/User';\nimport { readAll as readAllPermissions } from '~/resource/Permissions';\nimport { CreateNavLink, DeleteNavLink, UpdateNavLink } from '~/ui-components/BasicNavLink';\n\ntype DataPropType = {\n  id: number;\n  name: string;\n  description: string;\n  createdBy: UserType;\n  updatedBy: UserType;\n}\n\ntype RowPropType = {\n  data: DataPropType[];\n}\n\nexport default function AllPermissions() {\n  const rows = useLoaderData<typeof loader>();\n\n  return (<>\n    <hgroup>\n      <h1>Permissions</h1>\n      <h2>All Permissions</h2>\n    </hgroup>\n    <table role='grid'>\n      <thead>\n        <tr>\n          <th scope='col'>#</th>\n          <th scope='col'>name</th>\n          <th scope='col'>description</th>\n          <th scope='col'>created by</th>\n          <th scope='col'>last updated by</th>\n          <th scope='col'>&nbsp;</th>\n          <th scope='col'>&nbsp;</th>\n        </tr>\n      </thead>\n      <Rows data={rows}/>\n    </table>\n    <CreateNavLink role='button' to='./create' text='Create Permission'/>\n  </>);\n}\n\nconst Rows = ({data}:RowPropType) => {\n  return (<tbody>\n    {\n      data.map((\n        {\n          id,\n          name,\n          description,\n          createdBy,\n          updatedBy,\n        }:DataPropType,\n        index:number\n      ) => {\n        return (<tr key={id}>\n          <th scope='row'>{index + 1}</th>\n          <td>{name}</td>\n          <td>{description}</td>\n          <td>{createdBy.name}</td>\n          <td>{updatedBy.name}</td>\n          <td><UpdateNavLink to={`./update/${id}`}/></td>\n          <td><DeleteNavLink to={`./delete/${id}`}/></td>\n        </tr>);\n      })\n    }\n  </tbody>);\n};\n\nexport const loader:LoaderFunction = async({ params }:LoaderArgs) => {\n  const rows = await readAllPermissions();\n  return json(rows);\n}\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Permissions - Team Task Manager',\n    description: 'Permissions page',\n  };\n};", "import { LinksFunction } from '@remix-run/node';\nimport { Outlet } from '@remix-run/react';\nimport summaryWithControlButtonStyle from '~/styles/summary-control.css';\n\nexport default function Resources() {\n  return <>\n    <Outlet />\n  </>;\n}\n\nexport const links: LinksFunction = () => {\n  return [{\n    rel: 'stylesheet',\n    href: summaryWithControlButtonStyle\n  }];\n};", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { erase as eraseResource, search as searchResource } from '~/model/Resource';\n\nexport default function DeleteResource() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n  return (<>\n    <hgroup>\n      <h1>Resources</h1>\n      <h2>Delete Resources</h2>\n    </hgroup>\n    <table role='grid'>\n      <tbody>\n        <tr>\n          <th scope='row'>name:</th>\n          <td>{data.name}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>description:</b></th>\n          <td>{data.description}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>created by:</b></th>\n          <td>{data.createdBy.name} at {data.createdAt}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>last updated by:</b></th>\n          <td>{data.updatedBy.name} at {data.updatedAt}</td>\n        </tr>\n      </tbody>\n    </table>\n    <Form method='post'>\n      <button\n        tabIndex={1}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {isSubmitting ? 'submitting...' : 'delete'}\n      </button>\n    </Form>\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchResource({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  await eraseResource({id: params.id});\n  return redirect('/resources')\n}", "import { Resource as Entity, TABLE_ATTRIBUTES, TABLE_NAME } from '~/model/Resource';\nimport { search as searchTopic } from '~/model/Topic';\nimport { search as searchUser } from '~/model/User';\nimport db from '~/resource/db';\nimport type { ResourceType as ObjectType } from '~/model/Resource';\n\nconst getObjectKeyValues = (obj) => {\n  const keys = Object.keys(obj);\n  const values = keys.map(key => `${obj[key]}`);\n  return {\n    keys,\n    values,\n  }\n}\n\nasync function create(obj:ObjectType) {\n\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => '?');\n\n  const query = `\n    INSERT INTO ${TABLE_NAME} (${TABLE_ATTRIBUTES.join(',')})\n    VALUES (${attributePlaceHolder.join(',')})\n  `;\n  \n  await db.execute(query, obj.getAttributeValues());\n}\n\nasync function readAll() {\n  const query = `SELECT * FROM ${TABLE_NAME}`;\n  const [rows] = await db.execute(query);\n  \n  return await hydrate(rows);\n}\n\nasync function update(obj:ObjectType) {\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => `${TABLE_ATTRIBUTES[index]}=?`);\n  \n  const query = `\n    UPDATE ${TABLE_NAME} \n    SET ${attributePlaceHolder.join(',')}\n    WHERE id = ?\n  `;\n  \n  await db.execute(query, [...obj.getAttributeValues(), obj.id]);\n}\n\nasync function erase(criteriaObj) {\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  await db.execute(query, Object.values(criteriaObj));\n}\n\nasync function addTopic(criteriaObj:{topicId:number, resourceId:number, createdByUserId:number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceHolder = keys\n    .map(() => '?')\n    .join(',');\n\n  const query = `\n    INSERT INTO ResourceTopic (${keys.join(',')})\n    VALUES (${attributePlaceHolder})\n  `;\n\n  await db.execute(query, values);\n}\n\nasync function eraseTopic(criteriaObj:{topicId:number, resourceId:number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceholder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM ResourceTopic\n    WHERE ${attributePlaceholder}\n  `;\n  \n  await db.execute(query, values);\n}\n\nasync function search(criteriaObj) {\n\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    SELECT * FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  const [rows] = await db.execute(query, Object.values(criteriaObj));\n  return await hydrate(rows);\n}\n\nasync function searchResourceTopic(criteriaObj:{resourceId: number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceHolder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n    const query = `\n      SELECT topicId FROM ResourceTopic\n      WHERE ${attributePlaceHolder}\n    `;\n\n    const [rows, response] = await db.execute(query, values);\n\n    if (rows.length === 0) {\n      return [];\n    }\n\n    return Promise.all(rows.map(async (row) => {\n      const topics = await searchTopic({id: row.topicId});\n      return topics[0];\n    }));\n}\n\nasync function hydrate(rows) {\n  return Promise.all(rows.map(async ({\n    id,\n    name,\n    description,\n    createdByUserId,\n    updatedByUserId,\n    createdAt,\n    updatedAt,\n  }) => {\n\n    const createdByUsers = await searchUser({id: createdByUserId});\n    const updatedByUsers = await searchUser({id: updatedByUserId});\n    const topics = await searchResourceTopic({resourceId: id});\n\n    return new Entity({\n      id,\n      name,\n      description,\n      createdBy: createdByUsers[0],\n      updatedBy: updatedByUsers[0],\n      createdAt,\n      updatedAt,\n      topics,\n    });\n  }));\n}\n\nexport {\n  create,\n  readAll,\n  update,\n  erase,\n  addTopic,\n  eraseTopic,\n  search,\n};\n", "import {\n  create as createResource, erase as eraseResource,\n  search as searchResource, update as updateResource\n} from '~/resource/Resources';\nimport type { UserType } from './User';\n\nconst TABLE_NAME = 'Resources';\n\nconst TABLE_ATTRIBUTES = [\n  'name',\n  'description',\n  'createdByUserId',\n  'updatedByUserId',\n];\n\ninterface ResourceType {\n  id: number;\n  title: string;\n  description: string;\n  createdBy: UserType;\n  updatedBy: UserType;\n  getAttributeValues: () => [];\n  create: () => ResourceType;\n  udpate: () => ResourceType;\n}\n\nfunction Resource(obj:ResourceType) {\n  return this.set(obj);\n}\n\nfunction getAttributeValues() {\n  return TABLE_ATTRIBUTES.map((attribute) => {\n    switch (attribute) {\n      case 'createdByUserId': return this.createdBy.id;\n      case 'updatedByUserId': return this.updatedBy.id;\n      default: return this[attribute];\n    }\n  });\n}\n\nfunction set(obj) {\n  Object\n    .keys(obj)\n    .forEach((attribute) => this[attribute] = obj[attribute]);\n  \n  return this;\n}\n\nasync function create() {\n  await createResource(this);\n  return this;\n}\n\nasync function search(criteriaObj) {\n  const rows = await searchResource(criteriaObj);\n  return rows.map((row) => new Resource(row));\n}\n\nasync function update() {\n  await updateResource(this);\n  return this;\n}\n\nasync function erase(criteriaObj) {\n  await eraseResource(criteriaObj);\n}\n\nObject.assign(\n  Resource.prototype,\n  {\n    getAttributeValues,\n    set,\n    create,\n    update,\n  }\n);\n\nexport {\n  Resource,\n  TABLE_NAME,\n  TABLE_ATTRIBUTES,\n  search,\n  erase,\n};\nexport type { ResourceType };\n\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { search as searchResource } from '~/model/Resource';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport ResourceForm from '~/ui-components/ResourceForm';\n\nexport default function DeleteResource() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n\n  return (<>\n    <hgroup>\n      <h1>Resources</h1>\n      <h2>Update Resources</h2>\n    </hgroup>\n    <ResourceForm {...data} isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchResource({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description } = sanitizeData({formData: await request.formData()});\n\n  const objs = await searchResource({id: params.id});\n  objs[0]\n    .set({\n      name,\n      description,\n      updatedBy: user,\n    })\n    .update();\n\n  return redirect('/resources')\n}", "import { Form } from '@remix-run/react';\nimport FieldsetLegend from './FieldsetLegend';\nimport LabelInput from './LabelInput';\nimport LabelTextarea from './LabelTextarea';\n\nexport default function ResourceForm({\n  children = <></>,\n  description = '',\n  isSubmitting = false,\n  name = '',\n}) {\n  const isToCreate = !name && !description;\n\n  return (\n    <Form method='post'>\n      <FieldsetLegend title='resource details'>\n        <LabelInput\n          defaultValue={name}\n          name='name'\n          placeholder='resource name'\n          required={true}\n          tabIndex={1}\n          type='text'\n        />\n        <LabelTextarea\n          defaultValue={description}\n          name='description'\n          placeholder='enter description of the resource'\n          required={false}\n          tabIndex={2}\n        />\n      </FieldsetLegend>\n      { children }\n      <button\n        tabIndex={3}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {getButtonName(isToCreate, isSubmitting)}\n      </button>\n    </Form>\n  );\n}\n\nconst getButtonName = (isToCreate, isSubmitting) => {\n  if (isToCreate) {\n    return isSubmitting\n      ? 'submitting ...'\n      : 'create';\n  }\n\n  return isSubmitting\n    ? 'updating ...'\n    : 'update';\n};\n", "import type { ActionFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport {\n  useTransition as useNavigation\n} from '@remix-run/react';\nimport { Resource } from '~/model/Resource';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport ResourceForm from '~/ui-components/ResourceForm';\n\nexport default function CreateResource() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  \n  return (<>\n    <hgroup>\n      <h1>Resources</h1>\n      <h2>Create a Resource</h2>\n    </hgroup>\n    <ResourceForm isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description } = sanitizeData({formData: await request.formData()});\n  \n  const resource = new Resource({\n    name,\n    description,\n    createdBy: user,\n    updatedBy: user,\n  });\n\n  await resource.create();\n  \n  return redirect('/resources');\n}", "import { CreateNavLink, DeleteNavLink, UpdateNavLink } from '~/ui-components/BasicNavLink';\nimport { Form, useLoaderData } from '@remix-run/react';\nimport { ActionFunction, json } from '@remix-run/node';\nimport { addTopic as addResourceIntoTopic, eraseTopic as eraseResourceFromTopic, readAll as readAllResources } from '~/resource/Resources';\nimport { readAll as readAllTopics } from '~/resource/Topics';\nimport { TopicType } from '~/model/Topic';\nimport { UserType } from '~/model/User';\nimport Chip from '~/ui-components/Chip';\nimport LabelSelect from '~/ui-components/LabelSelect';\nimport type { LoaderArgs, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { getUserSession } from '~/session';\nimport { sanitizeData } from '~/sanitizerForm';\n\nconst ACTION_ADD_TOPIC = 'add-topic';\nconst ACTION_REMOVE_TOPIC = 'remove-topic';\n\ntype DataPropType = {\n  id: number;\n  name: string;\n  description: string;\n  createdBy: UserType;\n  updatedBy: UserType;\n  createdAt: string;\n  updatedAt: string;\n  topics: TopicType[];\n}\n\ntype RowPropType = {\n  resource: DataPropType[];\n  allTopics: TopicType[];\n}\n\nexport default function AllResources() {\n  const { resource, allTopics } = useLoaderData<typeof loader>();\n\n  return (<>\n    <hgroup>\n      <h1>Resources</h1>\n      <h2>All resources and ideas worth note taking</h2>\n    </hgroup>\n    <Rows resource={resource} allTopics={allTopics}/>\n    <CreateNavLink role='button' to='./create' text='Create Resource'/>\n  </>);\n}\n\nconst TopicChips = ({topics, resourceId}:{topics:TopicType[], resourceId:number}) => {\n  return (<>\n    {\n      topics.length === 0\n        ? 'there is no topic associated to this resource'\n        : topics.map((topic) => {\n          return ( \n            <Chip\n              key={topic.id}\n              actionName={ACTION_REMOVE_TOPIC}\n              data={{topicId: topic.id, resourceId}}\n            >\n              {topic.name}\n            </Chip>\n          );\n        })\n    }\n  </>);\n};\n\nconst TopicSelectOptions = ({resourceId, allTopics}:{resourceId:number, allTopics:TopicType[]}) => {\n  return (\n    <Form method='post'>\n      <input type='hidden' name='resourceId' value={resourceId} />\n      <LabelSelect name={ACTION_ADD_TOPIC} options={allTopics} />\n      <button\n        type='submit'\n        name='_action'\n        value={ACTION_ADD_TOPIC}\n        aria-label={ACTION_ADD_TOPIC}\n      >\n        add\n      </button>\n    </Form>\n  );\n}\n\nconst Rows = ({resource, allTopics}:RowPropType) => {\n  return (<>\n    {\n      resource.map((\n        {\n          id,\n          name,\n          description,\n          createdBy,\n          updatedBy,\n          createdAt,\n          updatedAt,\n          topics,\n        }:DataPropType,\n        index:number\n      ) => {\n        return (\n          <details key={id}>\n            <summary className='with-control-button'>\n              <span>{ index + 1 }. {name}</span>\n              <UpdateNavLink to={`./update/${id}`} />\n              <DeleteNavLink to={`./delete/${id}`} />\n            </summary>\n            <ul>\n              <li>Description: {description}</li>\n              <li>Created by: {createdBy.name} on {createdAt}</li>\n              <li>Last updated by: {updatedBy.name} on {updatedAt}</li>\n              <li>Projects: <TopicChips topics={topics} resourceId={id}/></li>\n            </ul>\n            <TopicSelectOptions allTopics={allTopics} resourceId={id}/>\n          </details>\n        );\n      })\n    }\n  </>);\n};\n\nexport const loader:LoaderFunction = async({ params }:LoaderArgs) => {\n  const resource = await readAllResources();\n  const allTopics = await readAllTopics();\n  return json({\n    resource,\n    allTopics,\n  });\n}\n\nexport const action:ActionFunction = async({request}) => {\n  const { user } = await getUserSession(request);\n  const {_action, resourceId, ...values} = sanitizeData({formData: await request.formData()});\n  \n  switch (_action) {\n    case ACTION_ADD_TOPIC:\n      await addResourceIntoTopic({\n        createdByUserId: user.id,\n        resourceId,\n        topicId: values[ACTION_ADD_TOPIC],\n      });\n      break;\n    case ACTION_REMOVE_TOPIC: \n      await eraseResourceFromTopic({topicId: values.topicId, resourceId});\n      break;\n    default:\n      break;\n  }\n\n  return null;\n};\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Resources - Team Task Manager',\n    description: 'Resources page',\n  };\n};", "import { LinksFunction } from '@remix-run/node';\nimport { Outlet } from '@remix-run/react';\nimport summaryWithControlButtonStyle from '~/styles/summary-control.css';\n\nexport default function Projects() {\n  return <>\n    <Outlet />\n  </>;\n}\n\nexport const links: LinksFunction = () => {\n  return [{\n    rel: 'stylesheet',\n    href: summaryWithControlButtonStyle\n  }];\n};", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { erase as eraseProject, search as searchProject } from '~/model/Project';\n\nexport default function DeleteProject() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n  return (<>\n    <hgroup>\n      <h1>Projects</h1>\n      <h2>Delete Project</h2>\n    </hgroup>\n    <table role='grid'>\n      <tbody>\n        <tr>\n          <th scope='row'>name:</th>\n          <td>{data.name}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>description:</b></th>\n          <td>{data.description}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>created by:</b></th>\n          <td>{data.createdBy.name} at {data.createdAt}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>last updated by:</b></th>\n          <td>{data.updatedBy.name} at {data.updatedAt}</td>\n        </tr>\n      </tbody>\n    </table>\n    <Form method='post'>\n      <button\n        tabIndex={1}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {isSubmitting ? 'submitting...' : 'delete'}\n      </button>\n    </Form>\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchProject({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  await eraseProject({id: params.id});\n  return redirect('/projects')\n}", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { search as searchProject } from '~/model/Project';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport ProjectForm from '~/ui-components/ProjectForm';\nimport { search as searchOrganization } from '~/model/Organization';\n\nexport default function UpdateProject() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const { project, organizations } = useLoaderData();\n\n  return (<>\n    <hgroup>\n      <h1>Projects</h1>\n      <h2>Update Project</h2>\n    </hgroup>\n    <ProjectForm {...project} organizationOptions={organizations} isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchProject({id: params.id});\n  const { user } = await getUserSession(request);\n  const organizations = await searchOrganization({createdByUserId: user.id});\n  return json({\n    project: objs[0],\n    organizations,\n  });\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description, organization } = sanitizeData({formData: await request.formData()});\n  const organizations = await searchOrganization({id: organization});\n\n  const objs = await searchProject({id: params.id});\n  objs[0]\n    .set({\n      name,\n      description,\n      organization: organizations[0],\n      updatedBy: user,\n    })\n    .update();\n\n  return redirect('/projects')\n}", "import { Form } from '@remix-run/react';\nimport FieldsetLegend from '~/ui-components/FieldsetLegend';\nimport LabelInput from '~/ui-components/LabelInput';\nimport LabelSelect from '~/ui-components/LabelSelect';\nimport LabelTextarea from '~/ui-components/LabelTextarea';\n\nexport default function ProjectForm({\n  children = <></>,\n  description = '',\n  isSubmitting = false,\n  name = '',\n  organizationOptions = [],\n  organization = {name: ''},\n}) {\n  const isToCreate = !name && !description;\n\n  return (\n    <Form method='post'>\n      <FieldsetLegend title='project details'>\n        <LabelInput\n          defaultValue={name}\n          name='name'\n          placeholder='project name'\n          required={true}\n          tabIndex={1}\n          type='text'\n        />\n        <LabelTextarea\n          defaultValue={description}\n          name='description'\n          placeholder='enter description of the project'\n          required={false}\n          tabIndex={2}\n        />\n        <LabelSelect\n          defaultValue={organization.id}\n          name='organization'\n          options={organizationOptions}\n          tabIndex={3}\n        />\n      </FieldsetLegend>\n      { children }\n      <button\n        tabIndex={3}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {getButtonName(isToCreate, isSubmitting)}\n      </button>\n    </Form>\n  );\n}\n\nconst getButtonName = (isToCreate, isSubmitting) => {\n  if (isToCreate) {\n    return isSubmitting\n      ? 'submitting ...'\n      : 'create';\n  }\n\n  return isSubmitting\n    ? 'updating ...'\n    : 'update';\n};\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport {\n  useLoaderData,\n  useTransition as useNavigation\n} from '@remix-run/react';\nimport { search as searchOrganization } from '~/model/Organization';\nimport { Project } from '~/model/Project';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport ProjectForm from '~/ui-components/ProjectForm';\n\nexport default function CreateProject() {\n  const organizations = useLoaderData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  \n  return (<>\n    <hgroup>\n      <h1>Projects</h1>\n      <h2>Create a Project</h2>\n    </hgroup>\n    <ProjectForm\n      organizationOptions={organizations}\n      isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const organizations = await searchOrganization({createdByUserId: user.id});\n  return json(organizations);\n};\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description, organization } = sanitizeData({formData: await request.formData()});\n  const organizations = await searchOrganization({\n    id: organization,\n  });\n\n  const project = new Project({\n    name,\n    description,\n    organization: organizations[0],\n    createdBy: user,\n    updatedBy: user,\n  });\n\n  await project.create();\n  \n  return redirect('/projects');\n}", "import { CreateNavLink, DeleteNavLink, UpdateNavLink } from '~/ui-components/BasicNavLink';\nimport { Form, useLoaderData } from '@remix-run/react';\nimport { ActionFunction, json } from '@remix-run/node';\nimport { OrganizationType } from '~/model/Organization';\nimport { addUser as addUserIntoProject, eraseUser as eraseUserFromProject, readAll as readAllProjects } from '~/resource/Projects';\nimport { readAll as readAllUsers } from '~/resource/Users';\nimport { UserType, searchProject as searchUserProject, } from '~/model/User';\nimport Chip from '~/ui-components/Chip';\nimport LabelSelect from '~/ui-components/LabelSelect';\nimport type { LoaderArgs, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { getUserSession } from '~/session';\nimport { sanitizeData } from '~/sanitizerForm';\n\nconst ACTION_ADD_USER = 'add-user';\nconst ACTION_REMOVE_USER = 'remove-user';\n\ntype DataPropType = {\n  id: number;\n  name: string;\n  description: string;\n  organization: OrganizationType;\n  createdBy: UserType;\n  updatedBy: UserType;\n  createdAt: string;\n  updatedAt: string;\n  users: UserType[];\n}\n\ntype RowPropType = {\n  projects: DataPropType[];\n  allUsers: UserType[];\n  isManager: boolean;\n}\n\nexport default function AllProjects() {\n  const { projects, allUsers, isManager } = useLoaderData<typeof loader>();\n\n  return (<>\n    <hgroup>\n      <h1>Projects</h1>\n      <h2>All Projects</h2>\n    </hgroup>\n    <Rows projects={projects} allUsers={allUsers} isManager={isManager}/>\n    {isManager && <CreateNavLink role='button' to='./create' text='Create Project'/>}\n  </>);\n}\n\nconst UserChips = ({users, projectId, isManager}:{users:UserType[], projectId:number, isManager:boolean}) => {\n  return (<>\n    {\n      users.length === 0\n        ? 'there is no user in this project'\n        : users.map((user) => {\n          return ( \n            <Chip\n              key={user.id}\n              actionName={ACTION_REMOVE_USER}\n              data={{userId: user.id, projectId}}\n              editable={isManager}\n            >\n              {user.name}\n            </Chip>\n          );\n        })\n    }\n  </>);\n};\n\nconst Rows = ({projects, allUsers, isManager}:RowPropType) => {\n  return (<>\n    {\n      projects.map((\n        {\n          id,\n          name,\n          description,\n          organization,\n          createdBy,\n          updatedBy,\n          createdAt,\n          updatedAt,\n          users,\n        }:DataPropType,\n        index:number\n      ) => {\n        return (\n          <details key={id}>\n            <summary className='with-control-button'>\n              <span>{ index + 1 }. {name}</span>\n              {isManager && <UpdateNavLink to={`./update/${id}`} />}\n              {isManager && <DeleteNavLink to={`./delete/${id}`} />}\n            </summary>\n            <ul>\n              <li>Description: {description}</li>\n              <li>Organization: {organization.name}</li>\n              <li>Created by: {createdBy.name} on {createdAt}</li>\n              <li>Last updated by: {updatedBy.name} on {updatedAt}</li>\n              <li>Users: <UserChips users={users} projectId={id} isManager={isManager}/></li>\n            </ul>\n            {isManager && <UserSelectOptions allUsers={allUsers} projectId={id}/>}\n          </details>\n        );\n      })\n    }\n  </>);\n};\n\nconst UserSelectOptions = ({projectId, allUsers}:{projectId:number, allUsers:UserType[]}) => {\n  return (\n    <Form method='post'>\n      <input type='hidden' name='projectId' value={projectId} />\n      <LabelSelect name={ACTION_ADD_USER} options={allUsers} />\n      <button\n        type='submit'\n        name='_action'\n        value={ACTION_ADD_USER}\n        aria-label={ACTION_ADD_USER}\n      >\n        add\n      </button>\n    </Form>\n  );\n}\n\nexport const loader:LoaderFunction = async({ request }:LoaderArgs) => {\n  const { user } = await getUserSession(request);\n  const roles = await user?.roles() ?? [];\n  const isManager = roles.some(({name}:{name: String}) => name === 'Manager');\n\n  const userProjects = await searchUserProject({userId: user.id});\n  const allUsers = await readAllUsers();\n\n  return json({\n    allUsers,\n    projects: userProjects,\n    isManager,\n  });\n}\n\nexport const action:ActionFunction = async({request}) => {\n  const { user } = await getUserSession(request);\n  const {_action, projectId, ...values} = sanitizeData({formData: await request.formData()});\n  \n  switch (_action) {\n    case ACTION_ADD_USER:\n      await addUserIntoProject({\n        createdByUserId: user.id,\n        projectId,\n        userId: values[ACTION_ADD_USER],\n      });\n      break;\n    case ACTION_REMOVE_USER: \n      await eraseUserFromProject({userId: values.userId, projectId});\n      break;\n    default:\n      break;\n  }\n\n  return null;\n};\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Projects - Team Task Manager',\n    description: 'Projects page',\n  };\n};", "import type { ActionFunction, MetaFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport { Form } from \"@remix-run/react\";\nimport { destroyCookieHeader, getUserSession } from \"~/session\";\n\nexport default function SignOut() {\n  return (<>\n    <h2>Sign Out</h2>\n    <Form method='post'>\n      <button>sign out</button>\n    </Form>\n  </>);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { session } = await getUserSession(request);\n  return redirect('/', {\n    headers: await destroyCookieHeader(session)\n  });\n};\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Sign out - Team Task Manager',\n    description: 'Sign out page',\n  };\n};", "// user profile\n// display all details about current user\n// update and delete option\n\nimport type { LoaderArgs, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { getUserSession } from '~/session';\nimport { BasicNavLink as NavLink } from '~/ui-components/BasicNavLink';\n\nexport default function UserProfile() {\n  const data = useLoaderData();\n\n  return (<>\n    <hgroup>\n      <h1>User Account</h1>\n      <h2>Profile</h2>\n    </hgroup>\n    <p>name: {data.name}</p>\n    <p>email: {data.email}</p>\n    <NavLink role='button' to='/sign-out'>sign out</NavLink>\n  </>);\n}\n\nexport const loader:LoaderFunction = async({ request, params }:LoaderArgs) => {\n  const { session } = await getUserSession(request);\n  return json(session.data);\n}\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Profile - Team Task Manager',\n    description: 'Sign in page',\n  };\n};", "import { Outlet } from '@remix-run/react';\n\n\nexport default function Reports() {\n  return (<>\n    <Outlet />\n  </>);\n}", "import { Chart } from 'react-google-charts';\nimport { getUserSession } from '~/session';\nimport { json } from '@remix-run/node';\nimport { readAll as readAllTaskStatus } from '~/resource/TaskStatus';\nimport { searchTasks } from '~/resource/Reports';\nimport { useLoaderData } from '@remix-run/react';\nimport { UserType } from '~/model/User';\nimport type { LoaderArgs, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { TaskStatusType } from '~/model/TaskStatus';\nimport { TaskType } from '~/model/Task';\n\ntype DataPropType = {\n  id: number;\n  name: string;\n  description: string;\n  createdBy: UserType;\n  updatedBy: UserType;\n}\n\ntype RowPropType = {\n  data: DataPropType[];\n}\n\nexport default function AllReports() {\n  const { tasks, taskStatuses } = useLoaderData<typeof loader>();\n\n  // All tasks\n  // Group tasks by status\n  const allTasksData = [['Status', 'Count']];\n  taskStatuses.reduce((accumulator: Array<Array<string | number>>, taskStatus: TaskStatusType) => {\n    accumulator.push([\n      taskStatus.name,\n      tasks.filter((task: TaskType) => task.status === taskStatus.name).length,\n    ]);\n    return accumulator;\n  }, allTasksData);\n\n  // Filter tasks by important && urge t\n  const importantUrgentTasks = tasks.filter((task: TaskType) => task.isUrgent && task.isImportant);\n  // // Group tasks by status\n  const importantUrgentData = [['Status', 'Count']];\n  taskStatuses.reduce((accumulator: Array<Array<string | number>>, taskStatus: TaskStatusType) => {\n    accumulator.push([\n      taskStatus.name,\n      importantUrgentTasks.filter((task: TaskType) => task.status === taskStatus.name).length,\n    ]);\n    return accumulator;\n  }, importantUrgentData);\n\n  // Filter tasks by important && not urgent\n  const importantNotUrgentTasks = tasks.filter((task: TaskType) => !task.isUrgent && task.isImportant);\n  // Group tasks by status\n  const importantNotUrgentData = [['Status', 'Count']];\n  taskStatuses.reduce((accumulator: Array<Array<string | number>>, taskStatus: TaskStatusType) => {\n    accumulator.push([\n      taskStatus.name,\n      importantNotUrgentTasks.filter((task: TaskType) => task.status === taskStatus.name).length,\n    ]);\n    return accumulator;\n  }, importantNotUrgentData);\n\n  // Filter tasks by urgent && not important\n  const urgentNotImportantTasks = tasks.filter((task: TaskType) => task.isUrgent && !task.isImportant);\n  // Group tasks by status\n  const urgentNotImportantTasksData = [['Status', 'Count']];\n  taskStatuses.reduce((accumulator: Array<Array<string | number>>, taskStatus: TaskStatusType) => {\n    accumulator.push([\n      taskStatus.name,\n      urgentNotImportantTasks.filter((task: TaskType) => task.status === taskStatus.name).length,\n    ]);\n    return accumulator;\n  }, urgentNotImportantTasksData);\n\n  // Filter tasks by not urgent && not important\n  const notUrgentNotImportantTasks = tasks.filter((task: TaskType) => !task.isUrgent && !task.isImportant);\n  // Group tasks by status\n  const notUrgentNotImportantTasksData = [['Status', 'Count']];\n  taskStatuses.reduce((accumulator: Array<Array<string | number>>, taskStatus: TaskStatusType) => {\n    accumulator.push([\n      taskStatus.name,\n      notUrgentNotImportantTasks.filter((task: TaskType) => task.status === taskStatus.name).length,\n    ]);\n    return accumulator;\n  }, notUrgentNotImportantTasksData);\n\n  return (<>\n    <hgroup>\n      <h1>Report</h1>\n      <h2>Current status and progress report</h2>\n    </hgroup>\n    <Chart\n      chartType=\"PieChart\"\n      data={allTasksData}\n      options={{\n        title: 'All Tasks by Status'\n      }}\n      width={'100%'}\n      height={'400px'}\n    />\n    <Chart\n      chartType=\"PieChart\"\n      data={importantUrgentData}\n      options={{\n        title: 'All Urgent and Important Tasks by Status'\n      }}\n      width={'100%'}\n      height={'400px'}\n    />\n    <Chart\n      chartType=\"PieChart\"\n      data={urgentNotImportantTasksData}\n      options={{\n        title: 'All Important but Not Urgent Tasks by Status'\n      }}\n      width={'100%'}\n      height={'400px'}\n    />\n    <Chart\n      chartType=\"PieChart\"\n      data={urgentNotImportantTasksData}\n      options={{\n        title: 'All Urgent but Not Important Tasks by Status'\n      }}\n      width={'100%'}\n      height={'400px'}\n    />\n    <Chart\n      chartType=\"PieChart\"\n      data={notUrgentNotImportantTasksData}\n      options={{\n        title: 'All Not Urgent and Not Important Tasks by Status'\n      }}\n      width={'100%'}\n      height={'400px'}\n    />\n  </>);\n}\n\nexport const loader:LoaderFunction = async({ request }:LoaderArgs) => {\n  const { user } = await getUserSession(request);\n  const tasks = await searchTasks({userId: user.id});\n  const taskStatuses = await readAllTaskStatus();\n  return json({\n    tasks,\n    taskStatuses,\n  });\n}\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Reports - Team Task Manager',\n    description: 'Reports page',\n  };\n};", "import db from '~/resource/db';\n\nasync function searchTasks({userId}: {userId: number}) {\n  // Query list of all tasks of this user\n  const query = `\n    SELECT\n      task.*,\n      taskStatus.name as status,\n      topic.name as topic,\n      project.name as project,\n      org.name as organization\n    FROM Tasks AS task\n    LEFT JOIN TaskStatus AS taskStatus ON task.taskStatusId=taskStatus.id\n    LEFT JOIN TaskTopic AS taskTopic ON task.id=taskTopic.taskId\n    LEFT JOIN Topics AS topic ON taskTopic.topicId=topic.id\n    LEFT JOIN ProjectTopic AS projectTopic ON topic.id=projectTopic.topicId\n    LEFT JOIN Projects AS project ON projectTopic.projectId=project.id\n    LEFT JOIN Organizations AS org ON project.organizationId=org.id\n    WHERE assignedToUserId=?\n  `;\n  const values = [`${userId}`];\n  const [rows] = await db.execute(query, values);\n  return rows;\n}\n\nexport {\n  searchTasks,\n};\n", "import type { ActionFunction, MetaFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport { Form, useTransition as useNavigation } from '@remix-run/react';\nimport bcrypt from 'bcryptjs';\nimport { search as searchUser } from '~/model/User';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession, setCookieHeader } from '~/session';\n\nexport default function SignIn() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  \n  return (<>\n    <h2>Sign in</h2>\n    <Form method='post'>\n      <fieldset>\n        <legend>User details</legend>\n        <label htmlFor='input-email'>email</label>\n        <input type='email' name='email' id='input-email' tabIndex={1} placeholder='email' required />\n        <label htmlFor='input-password'>password</label>\n        <input type='password' name='password' id='input-password' tabIndex={2} placeholder='password' required />\n      </fieldset>\n      <button tabIndex={3} disabled={isSubmitting}>{isSubmitting ? 'submitting...' : 'continue'}</button>\n    </Form>\n  </>);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { session } = await getUserSession(request);\n  const { email, password } = sanitizeData({formData: await request.formData()});\n\n  const users = await searchUser({ email });\n  const user = users[0];\n\n  const isCorrectPassword = await bcrypt.compare(password, user.hashPassword);\n\n  if (!isCorrectPassword) {\n    session.flash('error', 'Invalid username/password');\n    return redirect('/sign-in', {\n      headers: await setCookieHeader(session),\n    });\n  }\n\n  session.set('id', user.id);\n  session.set('name', user.name);\n  session.set('email', user.email);\n  \n  return redirect('/tasks', {\n    headers: await setCookieHeader(session),\n  });\n};\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Sign in - Team Task Manager',\n    description: 'Sign in page',\n  };\n};", "import { LinksFunction } from '@remix-run/node';\nimport { Outlet } from '@remix-run/react';\nimport summaryWithControlButtonStyle from '~/styles/summary-control.css';\n\nexport default function Topics() {\n  return <>\n    <Outlet />\n  </>;\n}\n\nexport const links: LinksFunction = () => {\n  return [{\n    rel: 'stylesheet',\n    href: summaryWithControlButtonStyle\n  }];\n};", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { erase as eraseTopic, search as searchTopic } from '~/model/Topic';\n\nexport default function DeleteTopic() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n  return (<>\n    <hgroup>\n      <h1>Topics</h1>\n      <h2>Delete Topic</h2>\n    </hgroup>\n    <table role='grid'>\n      <tbody>\n        <tr>\n          <th scope='row'>name:</th>\n          <td>{data.name}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>description:</b></th>\n          <td>{data.description}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>created by:</b></th>\n          <td>{data.createdBy.name} at {data.createdAt}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>last updated by:</b></th>\n          <td>{data.updatedBy.name} at {data.updatedAt}</td>\n        </tr>\n      </tbody>\n    </table>\n    <Form method='post'>\n      <button\n        tabIndex={1}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {isSubmitting ? 'submitting...' : 'delete'}\n      </button>\n    </Form>\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchTopic({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  await eraseTopic({id: params.id});\n  return redirect('/topics')\n}", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { search as searchTopic } from '~/model/Topic';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport TopicForm from '~/ui-components/TopicForm';\n\nexport default function UpdateTopic() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n\n  return (<>\n    <hgroup>\n      <h1>Topics</h1>\n      <h2>Update Topic</h2>\n    </hgroup>\n    <TopicForm {...data} isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchTopic({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description } = sanitizeData({formData: await request.formData()});\n\n  const objs = await searchTopic({id: params.id});\n  objs[0]\n    .set({\n      name,\n      description,\n      updatedBy: user,\n    })\n    .update();\n\n  return redirect('/topics')\n}", "import { Form } from '@remix-run/react';\nimport FieldsetLegend from './FieldsetLegend';\nimport LabelInput from './LabelInput';\nimport LabelTextarea from './LabelTextarea';\n\nexport default function TopicForm({\n  children = <></>,\n  description = '',\n  isSubmitting = false,\n  name = '',\n}) {\n  const isToCreate = !name && !description;\n\n  return (\n    <Form method='post'>\n      <FieldsetLegend title='topic details'>\n        <LabelInput\n          defaultValue={name}\n          name='name'\n          placeholder='topic name'\n          required={true}\n          tabIndex={1}\n          type='text'\n        />\n        <LabelTextarea\n          defaultValue={description}\n          name='description'\n          placeholder='enter description of the topic'\n          required={false}\n          tabIndex={2}\n        />\n      </FieldsetLegend>\n      { children }\n      <button\n        tabIndex={3}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {getButtonName(isToCreate, isSubmitting)}\n      </button>\n    </Form>\n  );\n}\n\nconst getButtonName = (isToCreate, isSubmitting) => {\n  if (isToCreate) {\n    return isSubmitting\n      ? 'submitting ...'\n      : 'create';\n  }\n\n  return isSubmitting\n    ? 'updating ...'\n    : 'update';\n};\n", "import type { ActionFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport {\n  useTransition as useNavigation\n} from '@remix-run/react';\nimport { Topic } from '~/model/Topic';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport TopicForm from '~/ui-components/TopicForm';\n\nexport default function CreateTopic() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  \n  return (<>\n    <hgroup>\n      <h1>Topics</h1>\n      <h2>Create Topic</h2>\n    </hgroup>\n    <TopicForm isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description } = sanitizeData({formData: await request.formData()});\n  \n  const topic = new Topic({\n    name,\n    description,\n    createdBy: user,\n    updatedBy: user,\n  });\n\n  await topic.create();\n  \n  return redirect('/topics');\n}", "import { CreateNavLink, DeleteNavLink, UpdateNavLink } from '~/ui-components/BasicNavLink';\nimport { Form, useLoaderData } from '@remix-run/react';\nimport { json } from '@remix-run/node';\nimport { ProjectType } from '~/model/Project';\nimport { readAll as readAllProjects } from '~/resource/Projects';\nimport { addProject as addTopicIntoProject, eraseProject as eraseTopicFromProject, readAll as readAllTopics } from '~/resource/Topics';\nimport { UserType } from '~/model/User';\nimport Chip from '~/ui-components/Chip';\nimport LabelSelect from '~/ui-components/LabelSelect';\nimport type { LoaderArgs, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { getUserSession } from '~/session';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { searchProject as searchUserProject, searchTopic as searchUserTopic } from '~/model/User';\n\nconst ACTION_ADD_PROJECT = 'add-project';\nconst ACTION_REMOVE_PROJECT = 'remove-project';\n\ntype DataPropType = {\n  id: number,\n  name: string,\n  description: string,\n  createdBy: UserType,\n  updatedBy: UserType,\n  createdAt: string,\n  updatedAt: string,\n  projects: ProjectType[],\n}\n\ntype RowPropType = {\n  topics: DataPropType[];\n  allProjects: ProjectType[];\n}\n\nexport default function AllTopics() {\n  const { topics, allProjects } = useLoaderData<typeof loader>();\n\n  return (<>\n    <hgroup>\n      <h1>Topics</h1>\n      <h2>All Topics</h2>\n    </hgroup>\n    <Rows topics={topics} allProjects={allProjects}/>\n    <CreateNavLink role='button' to='./create' text='Add New Topic'/>\n  </>);\n}\n\nconst ProjectChips = ({projects, topicId}:{projects:ProjectType[], topicId:number}) => {\n  return (<>\n    {\n      projects.length === 0\n        ? 'there is no project associated to this topic'\n        : projects.map((project) => {\n          return ( \n            <Chip\n              key={project.id}\n              actionName={ACTION_REMOVE_PROJECT}\n              data={{projectId: project.id, topicId}}\n              editable={true}\n            >\n              {project.name}\n            </Chip>\n          );\n        })\n    }\n  </>);\n};\n\nconst ProjectSelectOptions = ({topicId, allProject}:{topicId:number, allProject:ProjectType[]}) => {\n  return (\n    <Form method='post'>\n      <input type='hidden' name='topicId' value={topicId} />\n      <LabelSelect name={ACTION_ADD_PROJECT} options={allProject} />\n      <button\n        type='submit'\n        name='_action'\n        value={ACTION_ADD_PROJECT}\n        aria-label={ACTION_ADD_PROJECT}\n      >\n        add\n      </button>\n    </Form>\n  );\n}\n\nconst Rows = ({topics, allProjects}:RowPropType) => {\n  return (<>\n    {\n      topics.map((\n        {\n          id,\n          name,\n          description,\n          createdBy,\n          updatedBy,\n          createdAt,\n          updatedAt,\n          projects,\n        }:DataPropType,\n        index:number\n      ) => {\n        return (\n          <details key={id}>\n            <summary className='with-control-button'>\n              <span>{ index + 1 }. {name}</span>\n              <UpdateNavLink to={`./update/${id}`} />\n              <DeleteNavLink to={`./delete/${id}`} />\n            </summary>\n            <ul>\n              <li>Description: {description}</li>\n              <li>Created by: {createdBy.name} on {createdAt}</li>\n              <li>Last updated by: {updatedBy.name} on {updatedAt}</li>\n              <li>Projects: <ProjectChips projects={projects} topicId={id}/></li>\n            </ul>\n            <ProjectSelectOptions allProject={allProjects} topicId={id}/>\n          </details>\n        );\n      })\n    }\n  </>);\n};\n\nexport const loader:LoaderFunction = async({ request, params }:LoaderArgs) => {\n  const { user } = await getUserSession(request);\n  const userTopics = await searchUserTopic({userId: user.id});\n  const userProjects = await searchUserProject({userId: user.id});\n  \n  return json({\n    topics: userTopics,\n    allProjects: userProjects,\n  });\n}\n\nexport const action:ActionFunction = async({request}) => {\n  const { user } = await getUserSession(request);\n  const {_action, topicId, ...values} = sanitizeData({formData: await request.formData()});\n  \n  switch (_action) {\n    case ACTION_ADD_PROJECT:\n      await addTopicIntoProject({\n        createdByUserId: user.id,\n        topicId,\n        projectId: values[ACTION_ADD_PROJECT],\n      });\n      break;\n    case ACTION_REMOVE_PROJECT: \n      await eraseTopicFromProject({projectId: values.projectId, topicId});\n      break;\n    default:\n      break;\n  }\n\n  return null;\n};\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Topics - Team Task Manager',\n    description: 'Topics page',\n  };\n};", "import { LoaderArgs, LoaderFunction } from \"@remix-run/node\";\n\nexport default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n      <h1>Welcome to Team Task Manager</h1>\n      {/* <ul>\n        <li>\n          <a\n            target=\"_blank\"\n            href=\"https://remix.run/tutorials/blog\"\n            rel=\"noreferrer\"\n          >\n            15m Quickstart Blog Tutorial\n          </a>\n        </li>\n        <li>\n          <a\n            target=\"_blank\"\n            href=\"https://remix.run/tutorials/jokes\"\n            rel=\"noreferrer\"\n          >\n            Deep Dive Jokes App Tutorial\n          </a>\n        </li>\n        <li>\n          <a target=\"_blank\" href=\"https://remix.run/docs\" rel=\"noreferrer\">\n            Remix Docs\n          </a>\n        </li>\n      </ul> */}\n    </div>\n  );\n}\n", "import { Outlet } from '@remix-run/react';\n\nexport default function Roles() {\n  return (<>\n    <Outlet />\n  </>);\n}", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { erase as eraseRole, search as searchRole } from '~/model/Role';\n\nexport default function DeleteRole() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n  return (<>\n    <hgroup>\n      <h1>Roles</h1>\n      <h2>Delete Role</h2>\n    </hgroup>\n    <table role='grid'>\n      <tbody>\n        <tr>\n          <th scope='row'>name:</th>\n          <td>{data.name}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>description:</b></th>\n          <td>{data.description}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>organization:</b></th>\n          <td>{data.organization.name}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>created by:</b></th>\n          <td>{data.createdBy.name} at {data.createdAt}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>last updated by:</b></th>\n          <td>{data.updatedBy.name} at {data.updatedAt}</td>\n        </tr>\n      </tbody>\n    </table>\n    <Form method='post'>\n      <button\n        tabIndex={1}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {isSubmitting ? 'submitting...' : 'delete'}\n      </button>\n    </Form>\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchRole({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  await eraseRole({id: params.id});\n  return redirect('/roles')\n}", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { search as searchOrganization } from '~/model/Organization';\nimport { search as searchRole } from '~/model/Role';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport RoleForm from '~/ui-components/RoleForm';\n\nexport default function DeleteRole() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n\n  return (<>\n    <hgroup>\n      <h1>Roles</h1>\n      <h2>Update Role</h2>\n    </hgroup>\n    <RoleForm\n      {...data.role}\n      organizationOptions={data.organizations}\n      isSubmitting={isSubmitting}\n    />\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const roles = await searchRole({id: params.id});\n  const organizations = await searchOrganization({createdByUserId: user.id})\n  return json({\n    role: roles[0],\n    organizations,\n  });\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description } = sanitizeData({formData: await request.formData()});\n\n  const objs = await searchRole({id: params.id});\n  objs[0]\n    .set({\n      name,\n      description,\n      updatedBy: user,\n    })\n    .update();\n\n  return redirect('/roles')\n}", "import { Form } from '@remix-run/react';\nimport FieldsetLegend from './FieldsetLegend';\nimport LabelInput from './LabelInput';\nimport LabelSelect from './LabelSelect';\nimport LabelTextarea from './LabelTextarea';\n\nexport default function RoleForm({\n  children = <></>,\n  description = '',\n  isSubmitting = false,\n  name = '',\n  organization = {id: '', name: ''},\n  organizationOptions = [],\n}) {\n  const isToCreate = !name && !description && !organization?.name;\n\n  return (\n    <Form method='post'>\n      <FieldsetLegend title='role details'>\n        <LabelInput\n          defaultValue={name}\n          name='name'\n          placeholder='role name'\n          required={true}\n          tabIndex={1}\n          type='text'\n        />\n        <LabelTextarea\n          defaultValue={description}\n          name='description'\n          placeholder='enter description of the role'\n          required={false}\n          tabIndex={2}\n        />\n        <LabelSelect\n          defaultValue={organization.id}\n          name='organization'\n          options={organizationOptions}\n          tabIndex={3}\n        />\n      </FieldsetLegend>\n      { children }\n      <button\n        tabIndex={4}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {getButtonName(isToCreate, isSubmitting)}\n      </button>\n    </Form>\n  );\n}\n\nconst getButtonName = (isToCreate, isSubmitting) => {\n  if (isToCreate) {\n    return isSubmitting\n      ? 'submitting ...'\n      : 'create';\n  }\n\n  return isSubmitting\n    ? 'updating ...'\n    : 'update';\n};\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport {\n  useLoaderData,\n  useTransition as useNavigation\n} from '@remix-run/react';\nimport { search as searchOrganization } from '~/model/Organization';\nimport { Role } from '~/model/Role';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport RoleForm from '~/ui-components/RoleForm';\n\nexport default function CreateRole() {\n  const organizations = useLoaderData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  \n  return (<>\n    <hgroup>\n      <h1>Roles</h1>\n      <h2>Create a Role</h2>\n    </hgroup>\n    <RoleForm\n      isSubmitting={isSubmitting}\n      organizationOptions={organizations}\n    />\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const organizations = await searchOrganization({createdByUserId: user.id});\n  return json(organizations);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description, organization } = sanitizeData({formData: await request.formData()});\n  \n  const organizations = await searchOrganization({\n    id: organization,\n    createdByUserId: user.id,\n  });\n\n  const role = new Role({\n    name,\n    description,\n    organization: organizations[0],\n    createdBy: user,\n    updatedBy: user,\n  });\n\n  await role.create();\n  \n  return redirect('/roles');\n}", "import type { LoaderArgs, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { OrganizationType } from '~/model/Organization';\nimport { UserType } from '~/model/User';\nimport { readAll as readAllRoles } from '~/resource/Roles';\nimport { CreateNavLink, DeleteNavLink, UpdateNavLink } from '~/ui-components/BasicNavLink';\n\ntype DataPropType = {\n  id: number;\n  name: string;\n  description: string;\n  organization: OrganizationType;\n  createdBy: UserType;\n  updatedBy: UserType;\n}\n\ntype RowPropType = {\n  data: DataPropType[];\n}\n\nexport default function AllRoles() {\n  const rows = useLoaderData<typeof loader>();\n\n  return (<>\n    <hgroup>\n      <h1>Roles</h1>\n      <h2>All Roles</h2>\n    </hgroup>\n    <table role='grid'>\n      <thead>\n        <tr>\n          <th scope='col'>#</th>\n          <th scope='col'>name</th>\n          <th scope='col'>description</th>\n          <th scope='col'>organization</th>\n          <th scope='col'>created by</th>\n          <th scope='col'>last updated by</th>\n          <th scope='col'>&nbsp;</th>\n          <th scope='col'>&nbsp;</th>\n        </tr>\n      </thead>\n      <Rows data={rows}/>\n    </table>\n    <CreateNavLink role='button' to='./create' text='Create Role'/>\n  </>);\n}\n\nconst Rows = ({data}:RowPropType) => {\n  return (<tbody>\n    {\n      data.map((\n        {\n          id,\n          name,\n          description,\n          organization,\n          createdBy,\n          updatedBy,\n        }:DataPropType,\n        index:number\n      ) => {\n        return (<tr key={id}>\n          <th scope='row'>{index + 1}</th>\n          <td>{name}</td>\n          <td>{description}</td>\n          <td>{organization.name}</td>\n          <td>{createdBy.name}</td>\n          <td>{updatedBy.name}</td>\n          <td><UpdateNavLink to={`./update/${id}`}/></td>\n          <td><DeleteNavLink to={`./delete/${id}`}/></td>\n        </tr>);\n      })\n    }\n  </tbody>);\n};\n\nexport const loader:LoaderFunction = async({ params }:LoaderArgs) => {\n  const rows = await readAllRoles();\n  return json(rows);\n}\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Roles - Team Task Manager',\n    description: 'Roles page',\n  };\n};", "import { LinksFunction } from '@remix-run/node';\nimport { Outlet } from '@remix-run/react';\nimport summaryWithControlButtonStyle from '~/styles/summary-control.css';\nimport taskStyles from '~/styles/task.css';\n\nexport default function Tasks() {\n  return <>\n    <Outlet />\n  </>;\n}\n\nexport const links: LinksFunction = () => {\n  return [{\n    rel: 'stylesheet',\n    href: summaryWithControlButtonStyle\n  }, {\n    rel: 'stylesheet',\n    href: taskStyles\n  }];\n};", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { erase as eraseTask, search as searchTask } from '~/model/Task';\n\nexport default function DeleteTask() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n  return (<>\n    <hgroup>\n      <h1>Tasks</h1>\n      <h2>Delete Task</h2>\n    </hgroup>\n    <table role='grid'>\n    <tbody>\n        <tr>\n          <th scope='row'>name:</th>\n          <td>{data.name}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>description:</b></th>\n          <td>{data.description}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>created by:</b></th>\n          <td>{data.createdBy.name} at {data.createdAt}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>last updated by:</b></th>\n          <td>{data.updatedBy.name} at {data.updatedAt}</td>\n        </tr>\n      </tbody>\n    </table>\n    <Form method='post'>\n      <button\n        tabIndex={1}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {isSubmitting ? 'submitting...' : 'delete'}\n      </button>\n    </Form>\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchTask({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  await eraseTask({id: params.id});\n  return redirect('/tasks')\n}", "import { search as searchTaskStatus } from '~/model/TaskStatus';\nimport { search as searchTopic } from '~/model/Topic';\nimport { search as searchUser } from '~/model/User';\nimport { TABLE_ATTRIBUTES, TABLE_NAME, Task as Entity } from '~/model/Task';\nimport db from '~/resource/db';\nimport type { TaskType as ObjectType } from '~/model/Task';\n\nconst getObjectKeyValues = (obj) => {\n  const keys = Object.keys(obj);\n  const values = keys.map(key => `${obj[key]}`);\n  return {\n    keys,\n    values,\n  }\n}\n\nasync function create(obj:ObjectType) {\n\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => '?');\n\n  const query = `\n    INSERT INTO ${TABLE_NAME} (${TABLE_ATTRIBUTES.join(',')})\n    VALUES (${attributePlaceHolder.join(',')})\n  `;\n  \n  await db.execute(query, obj.getAttributeValues());\n}\n\nasync function readAll() {\n  const query = `SELECT * FROM ${TABLE_NAME}`;\n  const [rows] = await db.execute(query);\n  \n  return await hydrate(rows);\n}\n\nasync function update(obj:ObjectType) {\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => `${TABLE_ATTRIBUTES[index]}=?`);\n  \n  const query = `\n    UPDATE ${TABLE_NAME} \n    SET ${attributePlaceHolder.join(',')}\n    WHERE id = ?\n  `;\n\n  await db.execute(query, [...obj.getAttributeValues(), obj.id]);\n}\n\nasync function erase(criteriaObj) {\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  await db.execute(query, Object.values(criteriaObj));\n}\n\nasync function addTopic(criteriaObj:{topicId:number, resourceId:number, createdByUserId:number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceHolder = keys\n    .map(() => '?')\n    .join(',');\n\n  const query = `\n    INSERT INTO TaskTopic (${keys.join(',')})\n    VALUES (${attributePlaceHolder})\n  `;\n\n  await db.execute(query, values);\n}\n\nasync function eraseTopic(criteriaObj:{topicId:number, resourceId:number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceholder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM TaskTopic\n    WHERE ${attributePlaceholder}\n  `;\n  \n  await db.execute(query, values);\n}\n\nasync function search(criteriaObj) {\n\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    SELECT * FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  const [rows] = await db.execute(query, Object.values(criteriaObj));\n  return await hydrate(rows);\n}\n\nasync function searchResourceTopic(criteriaObj:{resourceId: number}) {\n  const {keys, values} = getObjectKeyValues(criteriaObj);\n\n  const attributePlaceHolder = keys\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n    const query = `\n      SELECT topicId FROM TaskTopic\n      WHERE ${attributePlaceHolder}\n    `;\n\n    const [rows, response] = await db.execute(query, values);\n\n    if (rows.length === 0) {\n      return [];\n    }\n\n    return Promise.all(rows.map(async (row) => {\n      const topics = await searchTopic({id: row.topicId});\n      return topics[0];\n    }));\n}\n\nasync function hydrate(rows) {\n  return Promise.all(rows.map(async ({\n    id,\n    name,\n    description,\n    createdByUserId,\n    updatedByUserId,\n    assignedToUserId,\n    taskStatusId,\n    isImportant,\n    isUrgent,\n    timeEstimate,\n    createdAt,\n    updatedAt,\n  }) => {\n\n    const createdByUsers = await searchUser({id: createdByUserId});\n    const updatedByUsers = await searchUser({id: updatedByUserId});\n    const assignedToUsers = await searchUser({id: assignedToUserId});\n    const taskStatuses = await searchTaskStatus({id: taskStatusId});\n    const topics = await searchResourceTopic({taskId: id});\n\n    return new Entity({\n      id,\n      name,\n      description,\n      createdBy: createdByUsers[0],\n      updatedBy: updatedByUsers[0],\n      assignedTo: assignedToUsers[0],\n      taskStatus: taskStatuses[0],\n      isImportant,\n      isUrgent,\n      timeEstimate,\n      createdAt,\n      updatedAt,\n      topics,\n    });\n  }));\n}\n\nexport {\n  create,\n  readAll,\n  update,\n  erase,\n  addTopic,\n  eraseTopic,\n  search,\n};\n", "import {\n  create as createTask, erase as eraseTask,\n  search as searchTask, update as updateTask\n} from '~/resource/Tasks';\nimport { TaskStatusType } from './TaskStatus';\nimport type { UserType } from './User';\n\nconst TABLE_NAME = 'Tasks';\n\nconst TABLE_ATTRIBUTES = [\n  'name',\n  'description',\n  'createdByUserId',\n  'updatedByUserId',\n  'assignedToUserId',\n  'taskStatusId',\n  'isImportant',\n  'isUrgent',\n  'timeEstimate',\n];\n\ninterface TaskType {\n  id: number;\n  name: string;\n  description: string;\n  createdBy: UserType;\n  updatedBy: UserType;\n  assignedTo: UserType;\n  taskStatus: TaskStatusType;\n  isImportant: number;\n  isUrgent: number;\n  timeEstimate: number;\n  getAttributeValues: () => [];\n  create: () => TaskType;\n  udpate: () => TaskType;\n}\n\nfunction Task(obj:TaskType) {\n  return this.set(obj);\n}\n\nfunction getAttributeValues() {\n  return TABLE_ATTRIBUTES.map((attribute) => {\n    switch (attribute) {\n      case 'createdByUserId': return this.createdBy.id;\n      case 'updatedByUserId': return this.updatedBy.id;\n      case 'assignedToUserId': return this.assignedTo.id;\n      case 'taskStatusId': return this.taskStatus.id;\n      default: return this[attribute];\n    }\n  });\n}\n\nfunction set(obj) {\n  Object\n    .keys(obj)\n    .forEach((attribute) => this[attribute] = obj[attribute]);\n  \n  return this;\n}\n\nasync function create() {\n  try {\n    await createTask(this);\n  } catch(error) {\n    console.error('createTask error', error);\n  }\n  return this;\n}\n\nasync function search(criteriaObj) {\n  const rows = await searchTask(criteriaObj);\n  return rows.map((row) => new Task(row));\n}\n\nasync function update() {\n  await updateTask(this);\n  return this;\n}\n\nasync function erase(criteriaObj) {\n  await eraseTask(criteriaObj);\n}\n\nObject.assign(\n  Task.prototype,\n  {\n    getAttributeValues,\n    set,\n    create,\n    update,\n  }\n);\n\nexport {\n  Task,\n  TABLE_NAME,\n  TABLE_ATTRIBUTES,\n  search,\n  erase,\n};\nexport type { TaskType };\n\n", "import { getUserSession } from '~/session';\nimport { json, redirect } from '@remix-run/node';\nimport { readAll as readAllTaskStatus } from '~/resource/TaskStatus';\nimport { readAll as readAllUsers } from '~/resource/Users';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { search as searchTask } from '~/model/Task';\nimport { search as searchTaskStatus } from '~/model/TaskStatus';\nimport { search as searchUser } from '~/model/User';\nimport { useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport TaskForm from '~/ui-components/TaskForm';\nimport type { ActionFunction, LoaderFunction } from '@remix-run/node';\n\nexport default function UpdateTask() {\n  const { users, taskStatuses, task } = useLoaderData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n\n  return (<>\n    <hgroup>\n      <h1>Tasks</h1>\n      <h2>Update Task</h2>\n    </hgroup>\n    <TaskForm {...task} users={users} taskStatuses={taskStatuses} isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchTask({id: params.id});\n  const users = await readAllUsers();\n  const taskStatuses = await readAllTaskStatus();\n  return json({\n    users,\n    taskStatuses,\n    task: objs[0],\n  });\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const {\n    name,\n    description,\n    status,\n    importance,\n    urgency,\n    ...values\n  } = sanitizeData({formData: await request.formData()});\n  const searchedUsers = await searchUser({id: values['assign-to']});\n  const taskStatuses = await searchTaskStatus({id: status});\n\n  const objs = await searchTask({id: params.id});\n  objs[0]\n    .set({\n      name,\n      description,\n      timeEstimate: values['time-estimate'],\n      assignedTo: searchedUsers[0],\n      taskStatus: taskStatuses[0],\n      isImportant: importance,\n      isUrgent: urgency,\n      createdBy: user,\n      updatedBy: user,\n    })\n    .update();\n\n  return redirect('/tasks')\n}\n", "import { Form } from '@remix-run/react';\nimport FieldsetLegend from './FieldsetLegend';\nimport LabelInput from './LabelInput';\nimport LabelSelect from './LabelSelect';\nimport LabelTextarea from './LabelTextarea';\n\nconst levelUrgent = [{\n  id: 0,\n  name: 'Not Urgent',\n}, {\n  id: 1,\n  name: 'Urgent',\n}];\n\nconst levelImportant = [{\n  id: 0,\n  name: 'Not Important',\n}, {\n  id: 1,\n  name: 'Important',\n}];\n\nexport default function TaskForm({\n  children = <></>,\n  description = '',\n  isSubmitting = false,\n  name = '',\n  users = [],\n  taskStatus = {},\n  taskStatuses = [],\n  timeEstimate = 0,\n  assignedTo = {},\n  isImportant = 0,\n  isUrgent = 0,\n}) {\n  const isToCreate = !name && !description;\n\n  return (\n    <Form method='post'>\n      <FieldsetLegend title='task details'>\n        <LabelInput\n          defaultValue={name}\n          name='name'\n          placeholder='task name'\n          required={true}\n          tabIndex={1}\n          type='text'\n        />\n        <LabelTextarea\n          defaultValue={description}\n          name='description'\n          placeholder='enter description of the task'\n          required={false}\n          tabIndex={2}\n        />\n        <LabelInput\n          defaultValue={`${timeEstimate}`}\n          name='time-estimate'\n          placeholder='in hours'\n          required={false}\n          tabIndex={3}\n          type='number'\n        />\n        <LabelSelect\n          defaultValue={assignedTo.id}\n          name='assign-to'\n          options={users}\n          tabIndex={4}\n        />\n        <LabelSelect\n          defaultValue={taskStatus.id}\n          name='status'\n          options={taskStatuses}\n          tabIndex={5}\n        />\n        <LabelSelect\n          defaultValue={isImportant.toString()}\n          name='importance'\n          options={levelImportant}\n          tabIndex={6}\n        />\n        <LabelSelect\n          defaultValue={isUrgent.toString()}\n          name='urgency'\n          options={levelUrgent}\n          tabIndex={7} />\n      </FieldsetLegend>\n      { children }\n      <button\n        type='submit'\n        tabIndex={3}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {getButtonName(isToCreate, isSubmitting)}\n      </button>\n    </Form>\n  );\n}\n\nconst getButtonName = (isToCreate, isSubmitting) => {\n  if (isToCreate) {\n    return isSubmitting\n      ? 'submitting ...'\n      : 'create';\n  }\n\n  return isSubmitting\n    ? 'updating ...'\n    : 'update';\n};\n", "import { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/node';\nimport {\n  useLoaderData, useNavigation\n} from '@remix-run/react';\nimport { Task } from '~/model/Task';\nimport { search as searchTaskStatus } from '~/model/TaskStatus';\nimport { search as searchUser } from '~/model/User';\nimport { readAll as readAllTaskStatus } from '~/resource/TaskStatus';\nimport { readAll as readAllUsers } from '~/resource/Users';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport TaskForm from '~/ui-components/TaskForm';\n\nexport default function CreateTask() {\n  const {users, taskStatuses} = useLoaderData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  \n  return (<>\n    <hgroup>\n      <h1>Tasks</h1>\n      <h2>Create a Task</h2>\n    </hgroup>\n    <TaskForm\n      isSubmitting={isSubmitting}\n      users={users}\n      taskStatuses={taskStatuses}\n    />\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const users = await readAllUsers();\n  const taskStatuses = await readAllTaskStatus();\n  return json({\n    users,\n    taskStatuses,\n  });\n};\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const {\n    name,\n    description,\n    status,\n    importance,\n    urgency,\n    ...values\n  } = sanitizeData({formData: await request.formData()});\n  const searchedUsers = await searchUser({id: values['assign-to']});\n  const taskStatuses = await searchTaskStatus({id: status});\n\n  const task = new Task({\n    name,\n    description,\n    timeEstimate: values['time-estimate'],\n    assignedTo: searchedUsers[0],\n    taskStatus: taskStatuses[0],\n    isImportant: importance,\n    isUrgent: urgency,\n    createdBy: user,\n    updatedBy: user,\n  });\n  \n  await task.create();\n  \n  return redirect('/tasks');\n}", "import { ActionFunction, json } from '@remix-run/node';\nimport { addTopic as addTaskIntoTopic, eraseTopic as eraseTaskFromTopic, readAll as readAllTasks } from '~/resource/Tasks';\nimport { UpdateNavLink, DeleteNavLink, CreateNavLink } from '~/ui-components/BasicNavLink';\nimport { Form, useLoaderData } from '@remix-run/react';\nimport { getUserSession } from '~/session';\nimport { readAll as readAllTopics } from '~/resource/Topics';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { TaskStatusType } from '~/model/TaskStatus';\nimport { TopicType } from '~/model/Topic';\nimport { UserType } from '~/model/User';\nimport Chip from '~/ui-components/Chip';\nimport LabelSelect from '~/ui-components/LabelSelect';\nimport type { LoaderArgs, LoaderFunction, MetaFunction } from '@remix-run/node';\n\nconst ACTION_ADD_TOPIC = 'add-topic';\nconst ACTION_REMOVE_TOPIC = 'remove-topic';\n\ntype DataPropType = {\n  id: number,\n  name: string,\n  description: string,\n  assignedTo: UserType,\n  taskStatus: TaskStatusType,\n  isImportant: boolean,\n  isUrgent: boolean,\n  timeEstimate: number,\n  createdBy: UserType,\n  updatedBy: UserType,\n  createdAt: string,\n  updatedAt: string,\n  topics: TopicType[],\n}\n\ntype RowPropType = {\n  tasks: DataPropType[];\n  allTopics: TopicType[];\n}\n\nexport default function AllTasks() {\n  const { tasks, allTopics } = useLoaderData<typeof loader>();\n\n  return (<>\n    <hgroup>\n      <h1>Tasks</h1>\n      <h2>All Tasks</h2>\n    </hgroup>\n    <Rows tasks={tasks} allTopics={allTopics}/>\n    <CreateNavLink role='button' to='./create' text='Create Task'/>\n  </>);\n}\n\nconst TopicChips = ({topics, taskId}:{topics:TopicType[], taskId:number}) => {\n  return (<>\n    {\n      topics.length === 0\n        ? 'there is no topic associated to this task'\n        : topics.map((topic) => {\n          return ( \n            <Chip\n              key={topic.id}\n              actionName={ACTION_REMOVE_TOPIC}\n              data={{topicId: topic.id, taskId}}\n              editable={true}\n            >\n              {topic.name}\n            </Chip>\n          );\n        })\n    }\n  </>);\n};\n\nconst TopicSelectOptions = ({taskId, allTopics}:{taskId:number, allTopics:TopicType[]}) => {\n  return (\n    <Form method='post'>\n      <input type='hidden' name='taskId' value={taskId} />\n      <LabelSelect name={ACTION_ADD_TOPIC} options={allTopics} />\n      <button\n        type='submit'\n        name='_action'\n        value={ACTION_ADD_TOPIC}\n        aria-label={ACTION_ADD_TOPIC}\n      >\n        add\n      </button>\n    </Form>\n  );\n}\n\nconst Task = ({task, allTopics, index}: {task:DataPropType, allTopics:TopicType[], index:number}) => {\n  return (\n    <details>\n      <summary className='with-control-button' style={{ backgroundColor: task.taskStatus.color }}>\n        <span className='task-row'>\n          <div>{index + 1}. </div>\n          <div>{task.name} </div>\n          <div className='summary-detail'>{task.assignedTo.name} </div>\n          <div className='summary-detail'>{task.taskStatus.name}</div>\n        </span>\n        <UpdateNavLink to={`./update/${task.id}`} />\n        <DeleteNavLink to={`./delete/${task.id}`} />\n      </summary>\n      <ul>\n        <li>Description: {task.description}</li>\n        <li>Assigned to: {task.assignedTo.name}</li>\n        <li>Task status: {task.taskStatus.name}</li>\n        <li>Important: {task.isImportant ? 'High' : 'Low'}</li>\n        <li>Urgent: {task.isUrgent ? 'High' : 'Low'}</li>\n        <li>Time estimate: {task.timeEstimate} hour{task.timeEstimate > 1 && 's'}</li>\n        <li>Created by: {task.createdBy.name} on {task.createdAt}</li>\n        <li>Last updated by: {task.updatedBy.name} on {task.updatedAt}</li>\n        <li>Related Topics: <TopicChips topics={task.topics} taskId={task.id}/></li>\n      </ul>\n      <TopicSelectOptions allTopics={allTopics} taskId={task.id}/>\n    </details>\n  );\n}\n\nconst Rows = ({tasks, allTopics}:RowPropType) => {\n  const urgentAndImportantTasks = tasks.filter(task => task.isUrgent && task.isImportant);\n  const notUrgentAndImportantTasks = tasks.filter(task => !task.isUrgent && task.isImportant);\n  const urgentAndNotImportantTasks = tasks.filter(task => task.isUrgent && !task.isImportant);\n  const notUrgentAndNotImportantTasks = tasks.filter(task => !task.isUrgent && !task.isImportant);\n\n  return (<div className='task-matrix'>\n    <div></div>\n    <div className='text-center'>Urgent</div>\n    <div className='text-center'>Not Urgent</div>\n    <div style={{ minHeight: '300px', paddingTop: '80px' }}>\n      <div className='vertical-text'>Important</div>\n    </div>\n    <div className='task-group'>\n    {\n      // Urgent and Important\n      urgentAndImportantTasks.length > 0\n        ? urgentAndImportantTasks.map((task: DataPropType, index:number) => <Task key={task.id} task={task} allTopics={allTopics} index={index}/>)\n        : <div className='empty-task-container'>there is no task</div>\n    }\n    </div>\n    <div className='task-group'>\n    {\n      // Not Urgent and Important\n      notUrgentAndImportantTasks.length > 0\n        ? notUrgentAndImportantTasks.map((task: DataPropType, index:number) => <Task key={task.id} task={task} allTopics={allTopics} index={index}/>)\n        : <div className='empty-task-container'>there is no task</div>\n    }\n    </div>\n    <div style={{ minHeight: '300px', paddingTop: '80px' }}>\n      <div className='vertical-text'>Not Important</div>\n    </div>\n    <div className='task-group'>\n    {\n      // Urgent and Not Important\n      urgentAndNotImportantTasks.length > 0\n        ? urgentAndNotImportantTasks.map((task: DataPropType, index:number) => <Task key={task.id} task={task} allTopics={allTopics} index={index}/>)\n        : <div className='empty-task-container'>there is no task</div>\n    }\n    </div>\n    <div className='task-group'>\n    {\n      // Not Urgent and Not Important\n      notUrgentAndNotImportantTasks.length > 0\n        ? notUrgentAndNotImportantTasks.map((task: DataPropType, index:number) => <Task key={task.id} task={task} allTopics={allTopics} index={index}/>)\n        : <div className='empty-task-container'>there is no task</div>\n    }\n    </div>\n  </div>);\n};\n\nexport const loader:LoaderFunction = async({ params }:LoaderArgs) => {\n  const tasks = await readAllTasks();\n  const allTopics = await readAllTopics();\n  return json({\n    tasks,\n    allTopics,\n  });\n}\n\nexport const action:ActionFunction = async({request}) => {\n  const { user } = await getUserSession(request);\n  const {_action, taskId, ...values} = sanitizeData({formData: await request.formData()});\n  \n  switch (_action) {\n    case ACTION_ADD_TOPIC:\n      await addTaskIntoTopic({\n        createdByUserId: user.id,\n        taskId,\n        topicId: values[ACTION_ADD_TOPIC],\n      });\n      break;\n    case ACTION_REMOVE_TOPIC: \n      await eraseTaskFromTopic({topicId: values.topicId, taskId});\n      break;\n    default:\n      break;\n  }\n\n  return null;\n};\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Tasks - Team Task Manager',\n    description: 'Tasks page',\n  };\n};\n", "import { Outlet } from '@remix-run/react';\n\nexport default function Users() {\n  return (<>\n    <Outlet />\n  </>);\n}", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { erase as eraseUser, search as searchUser } from '~/model/User';\n\nexport default function DeleteUser() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n  return (<>\n    <hgroup>\n      <h1>Users</h1>\n      <h2>Delete user</h2>\n    </hgroup>\n    <table role='grid'>\n      <tbody>\n        <tr>\n          <th scope='row'>name:</th>\n          <td>{data.name}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\"><b>email:</b></th>\n          <td>{data.email}</td>\n        </tr>\n      </tbody>\n    </table>\n    <Form method='post'>\n      <button\n        tabIndex={1}\n        disabled={isSubmitting}\n        aria-busy={isSubmitting}\n      >\n        {isSubmitting ? 'submitting...' : 'delete'}\n      </button>\n    </Form>\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchUser({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  await eraseUser({id: params.id});\n  return redirect('/users')\n}", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData, useTransition as useNavigation } from '@remix-run/react';\nimport { search as searchUser } from '~/model/User';\nimport { sanitizeData } from '~/sanitizerForm';\nimport { getUserSession } from '~/session';\nimport UserForm from '~/ui-components/UserForm';\n\nexport default function DeleteUser() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const data = useLoaderData();\n\n  return (<>\n    <hgroup>\n      <h1>Users</h1>\n      <h2>Update User</h2>\n    </hgroup>\n    <UserForm {...data} isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const loader:LoaderFunction = async({request, params}) => {\n  const objs = await searchUser({id: params.id});\n  return json(objs[0]);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { user } = await getUserSession(request);\n  const { name, description } = sanitizeData({formData: await request.formData()});\n\n  const objs = await searchUser({id: params.id});\n  objs[0]\n    .set({\n      name,\n      description,\n      updatedBy: user,\n    })\n    .update();\n\n  return redirect('/users')\n}", "import type { ActionFunction, MetaFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport {\n  useTransition as useNavigation\n} from '@remix-run/react';\nimport bcrypt from 'bcryptjs';\nimport { create as createUser } from '~/resource/Users';\nimport { sanitizeData } from '~/sanitizerForm';\nimport UserForm from '~/ui-components/UserForm';\n\nexport default function CreateUser() {\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n\n  return (<>\n    <hgroup>\n      <h1>Users</h1>\n      <h2>Create a User</h2>\n    </hgroup>\n    <UserForm isSubmitting={isSubmitting} />\n  </>);\n}\n\nexport const action:ActionFunction = async({request, params}) => {\n  const { name, email, password } = sanitizeData({formData: await request.formData()});\n  const hashPassword = await bcrypt.hash(password, 10);\n\n  await createUser({\n    name,\n    email,\n    hashPassword,\n  });\n  \n  return redirect('/users');\n};\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Create User - Team Task Manager',\n    description: 'Create user page',\n  };\n};\n", "import type { LoaderArgs, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { readAll as readAllUser } from '~/resource/Users';\nimport { CreateNavLink, DeleteNavLink, UpdateNavLink } from '~/ui-components/BasicNavLink';\n\nexport default function AllUsers() {\n  const rows = useLoaderData<typeof loader>();\n\n  return (<>\n    <hgroup>\n      <h1>Users</h1>\n      <h2>All Users</h2>\n    </hgroup>\n    <table role='grid'>\n      <thead>\n        <tr>\n          <th scope='col'>#</th>\n          <th scope='col'>name</th>\n          <th scope='col'>email</th>\n          <th scope='col'>&nbsp;</th>\n          <th scope='col'>&nbsp;</th>\n        </tr>\n      </thead>\n      <Rows data={rows}/>\n    </table>\n    <CreateNavLink role='button' to='./create' text='Create User'/>\n  </>);\n}\n\nexport const loader:LoaderFunction = async({ params }: LoaderArgs) => {\n  const rows = await readAllUser();\n  return json(rows);\n}\n\ntype UserInputType = {\n  id: number;\n  name: string;\n  email: string;\n  hashPassword: string;\n}\n\ntype DataPropType = {\n  data: UserInputType[];\n}\n\nconst Rows:React.FC<DataPropType> = ({data}:DataPropType) => {\n  return (<tbody>\n    {\n      data.map((\n        {\n          id,\n          name,\n          email,\n        }:UserInputType,\n        index:number\n      ) => {\n        return (<tr key={id}>\n          <th scope='row'>{index + 1}</th>\n          <td>{name}</td>\n          <td>{email}</td>\n          <td><UpdateNavLink to={`./update/${id}`}/></td>\n          <td><DeleteNavLink to={`./delete/${id}`}/></td>\n        </tr>);\n      })\n    }\n  </tbody>);\n};\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Users - Team Task Manager',\n    description: 'Users page',\n  };\n};", "import { Outlet } from '@remix-run/react';\n\nexport default function Logs() {\n  return (<>\n    <Outlet />\n  </>);\n}", "import type { LoaderArgs, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { readAll as readAllLogs } from '~/resource/Logs';\nimport { DeleteNavLink, UpdateNavLink } from '~/ui-components/BasicNavLink';\n\ntype DataPropType = {\n  id: number;\n  name: string;\n  description: string;\n  createdByUserId: number;\n  updatedByUserId: number;\n}\n\ntype RowPropType = {\n  data: DataPropType[];\n}\n\nexport default function AllLogs() {\n  const rows = useLoaderData<typeof loader>();\n\n  return (<>\n    <hgroup>\n      <h1>Logs</h1>\n      <h2>All Logs</h2>\n    </hgroup>\n    <table role='grid'>\n      <thead>\n        <tr>\n          <th scope='col'>#</th>\n          <th scope='col'>name</th>\n          <th scope='col'>description</th>\n          <th scope='col'>created by</th>\n          <th scope='col'>last updated by</th>\n          <th scope='col'>&nbsp;</th>\n          <th scope='col'>&nbsp;</th>\n        </tr>\n      </thead>\n      <Rows data={rows}/>\n    </table>\n  </>);\n}\n\nconst Rows = ({data}:RowPropType) => {\n  return (<tbody>\n    {\n      data.map((\n        {\n          id,\n          name,\n          description,\n          createdByUserId,\n          updatedByUserId,\n        }:DataPropType,\n        index:number\n      ) => {\n        return (<tr key={id}>\n          <th scope='row'>{index + 1}</th>\n          <td>{name}</td>\n          <td>{description}</td>\n          <td>{createdByUserId}</td>\n          <td>{updatedByUserId}</td>\n          <td><UpdateNavLink to={`./update/${id}`} /></td>\n          <td><DeleteNavLink to={`./delete/${id}`} /></td>\n        </tr>);\n      })\n    }\n  </tbody>);\n};\n\nexport const loader:LoaderFunction = async({ params }:LoaderArgs) => {\n  const rows = await readAllLogs();\n  return json(rows);\n}\n\nexport const meta:MetaFunction = () => {\n  return {\n    title: 'Logs - Team Task Manager',\n    description: 'Logs page',\n  };\n};", "import {\n  create as createLog, erase as eraseLog,\n  search as searchLog, update as updateLog\n} from '~/resource/Logs';\nimport type { OrganizationType } from './Organization';\nimport type { ProjectType } from './Project';\nimport type { ResourceType } from './Resource';\nimport type { TaskType } from './Task';\nimport type { TopicType } from './Topic';\nimport type { UserType } from './User';\n\nconst TABLE_NAME = 'Logs';\n\nconst TABLE_ATTRIBUTES = [\n  'message',\n  'userId',\n  'organizationId',\n  'projectId',\n  'topicId',\n  'resourceId',\n  'taskId',\n];\n\ninterface LogType {\n  id: number;\n  message: string;\n  user: UserType;\n  organization: OrganizationType;\n  project: ProjectType;\n  topic: TopicType;\n  resource: ResourceType;\n  task: TaskType;\n  getAttributeValues: () => [];\n  create: () => LogType;\n  udpate: () => LogType;\n}\n\nfunction Log(obj:LogType) {\n  return this.set(obj);\n}\n\nfunction getAttributeValues() {\n  return TABLE_ATTRIBUTES.map((attribute) => {\n    switch (attribute) {\n      case 'userId': return this.user.id;\n      case 'organizationId': return this.organization.id;\n      case 'projectId': return this.project.id;\n      case 'topicId' : return this.topic.id;\n      case 'resourceId' : return this.resource.id;\n      case 'taskId' : return this.task.id;\n      default: return this[attribute];\n    }\n  });\n}\n\nfunction set(obj) {\n  Object\n    .keys(obj)\n    .forEach((attribute) => this[attribute] = obj[attribute]);\n  \n  return this;\n}\n\nasync function create() {\n  await createLog(this);\n  return this;\n}\n\nasync function search(criteriaObj) {\n  const rows = await searchLog(criteriaObj);\n  return rows.map((row) => new Log(row));\n}\n\nasync function update() {\n  await updateLog(this);\n  return this;\n}\n\nasync function erase(criteriaObj) {\n  await eraseLog(criteriaObj);\n}\n\nObject.assign(\n  Log.prototype,\n  {\n    getAttributeValues,\n    set,\n    create,\n    update,\n  }\n);\n\nexport {\n  Log,\n  TABLE_NAME,\n  TABLE_ATTRIBUTES,\n  search,\n  erase,\n};\nexport type { LogType };\n\n", "import type { LogType as ObjectType } from '~/model/Log';\nimport { Log as Entity, TABLE_ATTRIBUTES, TABLE_NAME } from '~/model/Log';\nimport db from './db';\n\nasync function create(obj:ObjectType) {\n\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => '?');\n\n  const query = `\n    INSERT INTO ${TABLE_NAME} (${TABLE_ATTRIBUTES.join(',')})\n    VALUES (${attributePlaceHolder.join(',')})\n  `;\n  \n  await db.execute(query, obj.getAttributeValues());\n}\n\nasync function readAll() {\n  const query = `SELECT * FROM ${TABLE_NAME}`;\n  const [rows] = await db.execute(query);\n  \n  return rows.map((row) => new Entity(row));\n}\n\nasync function update(obj:ObjectType) {\n  const attributePlaceHolder = Array\n    .from({length: TABLE_ATTRIBUTES.length}, (_, index) => `${TABLE_ATTRIBUTES[index]}=?`);\n  \n  const query = `\n    UPDATE ${TABLE_NAME} \n    SET ${attributePlaceHolder.join(',')}\n    WHERE id = ?\n  `;\n  \n  await db.execute(query, [...obj.getAttributeValues(), obj.id]);\n}\n\nasync function erase(criteriaObj) {\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    DELETE FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  await db.execute(query, Object.values(criteriaObj));\n}\n\nasync function search(criteriaObj) {\n\n  const attributePlaceholder = Object\n    .keys(criteriaObj)\n    .map(column => `${column}=?`)\n    .join(' AND ');\n\n  const query = `\n    SELECT * FROM ${TABLE_NAME}\n    WHERE ${attributePlaceholder}\n  `;\n\n  const [rows] = await db.execute(query, Object.values(criteriaObj));\n  return rows;\n}\n\nexport {\n  create,\n  readAll,\n  update,\n  erase,\n  search,\n};\n", "export default {'entry':{'module':'/build/entry.client-HZW5MY35.js','imports':['/build/_shared/chunk-4DNSD54X.js','/build/_shared/chunk-X5G7LQHA.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-GRQ44SBE.js','imports':['/build/_shared/chunk-ODIKV3NW.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/account':{'id':'routes/account','parentId':'root','path':'account','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account-K5J6OGIY.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/create-an-account':{'id':'routes/create-an-account','parentId':'root','path':'create-an-account','index':undefined,'caseSensitive':undefined,'module':'/build/routes/create-an-account-MYFMNMOY.js','imports':['/build/_shared/chunk-QRFVJABT.js','/build/_shared/chunk-YMPYLBPA.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-JLU4H6MT.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logs':{'id':'routes/logs','parentId':'root','path':'logs','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logs-RUGPMZL5.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logs/index':{'id':'routes/logs/index','parentId':'routes/logs','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/logs/index-5XZLRRBH.js','imports':['/build/_shared/chunk-ODIKV3NW.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/organizations':{'id':'routes/organizations','parentId':'root','path':'organizations','index':undefined,'caseSensitive':undefined,'module':'/build/routes/organizations-3TOB6E6V.js','imports':['/build/_shared/chunk-EUHQXF5R.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/organizations/create':{'id':'routes/organizations/create','parentId':'routes/organizations','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/organizations/create-M6Q3WVL6.js','imports':['/build/_shared/chunk-XVR365AN.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/organizations/delete.$id':{'id':'routes/organizations/delete.$id','parentId':'routes/organizations','path':'delete/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/organizations/delete.$id-DUSFOZDC.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/organizations/index':{'id':'routes/organizations/index','parentId':'routes/organizations','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/organizations/index-SN7FHHJG.js','imports':['/build/_shared/chunk-EHUQRGMG.js','/build/_shared/chunk-QLQLX5QX.js','/build/_shared/chunk-ODIKV3NW.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/organizations/update.$id':{'id':'routes/organizations/update.$id','parentId':'routes/organizations','path':'update/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/organizations/update.$id-GG6TO7V6.js','imports':['/build/_shared/chunk-XVR365AN.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/permissions':{'id':'routes/permissions','parentId':'root','path':'permissions','index':undefined,'caseSensitive':undefined,'module':'/build/routes/permissions-3FOSKE7Y.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/permissions/create':{'id':'routes/permissions/create','parentId':'routes/permissions','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/permissions/create-J7T7I77W.js','imports':['/build/_shared/chunk-ODJVC2PP.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/permissions/delete.$id':{'id':'routes/permissions/delete.$id','parentId':'routes/permissions','path':'delete/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/permissions/delete.$id-LOCVL7AV.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/permissions/index':{'id':'routes/permissions/index','parentId':'routes/permissions','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/permissions/index-5AF3ZPJ3.js','imports':['/build/_shared/chunk-ODIKV3NW.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/permissions/update.$id':{'id':'routes/permissions/update.$id','parentId':'routes/permissions','path':'update/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/permissions/update.$id-SKPQEXC6.js','imports':['/build/_shared/chunk-ODJVC2PP.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/projects':{'id':'routes/projects','parentId':'root','path':'projects','index':undefined,'caseSensitive':undefined,'module':'/build/routes/projects-ZUDCQYGA.js','imports':['/build/_shared/chunk-EUHQXF5R.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/projects/create':{'id':'routes/projects/create','parentId':'routes/projects','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/projects/create-3CSJGDLR.js','imports':['/build/_shared/chunk-GOSRRQMY.js','/build/_shared/chunk-QLQLX5QX.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/projects/delete.$id':{'id':'routes/projects/delete.$id','parentId':'routes/projects','path':'delete/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/projects/delete.$id-6KIDPJNI.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/projects/index':{'id':'routes/projects/index','parentId':'routes/projects','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/projects/index-23BE3AZD.js','imports':['/build/_shared/chunk-EHUQRGMG.js','/build/_shared/chunk-QLQLX5QX.js','/build/_shared/chunk-ODIKV3NW.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/projects/update.$id':{'id':'routes/projects/update.$id','parentId':'routes/projects','path':'update/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/projects/update.$id-DBTA57NP.js','imports':['/build/_shared/chunk-GOSRRQMY.js','/build/_shared/chunk-QLQLX5QX.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/reports':{'id':'routes/reports','parentId':'root','path':'reports','index':undefined,'caseSensitive':undefined,'module':'/build/routes/reports-ZVRWIZSX.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/reports/index':{'id':'routes/reports/index','parentId':'routes/reports','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/reports/index-BKRF6QYT.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources':{'id':'routes/resources','parentId':'root','path':'resources','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources-5VLBCWCF.js','imports':['/build/_shared/chunk-EUHQXF5R.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources/create':{'id':'routes/resources/create','parentId':'routes/resources','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources/create-5FDKEXHR.js','imports':['/build/_shared/chunk-H7DMGK37.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources/delete.$id':{'id':'routes/resources/delete.$id','parentId':'routes/resources','path':'delete/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources/delete.$id-N6BTJKDK.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources/index':{'id':'routes/resources/index','parentId':'routes/resources','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/resources/index-FVYSGYMA.js','imports':['/build/_shared/chunk-EHUQRGMG.js','/build/_shared/chunk-QLQLX5QX.js','/build/_shared/chunk-ODIKV3NW.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources/update.$id':{'id':'routes/resources/update.$id','parentId':'routes/resources','path':'update/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources/update.$id-WWSLJ75A.js','imports':['/build/_shared/chunk-H7DMGK37.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/roles':{'id':'routes/roles','parentId':'root','path':'roles','index':undefined,'caseSensitive':undefined,'module':'/build/routes/roles-N5ZZXZUI.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/roles/create':{'id':'routes/roles/create','parentId':'routes/roles','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/roles/create-36ETSA5V.js','imports':['/build/_shared/chunk-TQQCOXL2.js','/build/_shared/chunk-QLQLX5QX.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/roles/delete.$id':{'id':'routes/roles/delete.$id','parentId':'routes/roles','path':'delete/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/roles/delete.$id-JTXWJQJJ.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/roles/index':{'id':'routes/roles/index','parentId':'routes/roles','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/roles/index-X3OUGYA3.js','imports':['/build/_shared/chunk-ODIKV3NW.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/roles/update.$id':{'id':'routes/roles/update.$id','parentId':'routes/roles','path':'update/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/roles/update.$id-Z37X4E6E.js','imports':['/build/_shared/chunk-TQQCOXL2.js','/build/_shared/chunk-QLQLX5QX.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-in':{'id':'routes/sign-in','parentId':'root','path':'sign-in','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in-MDC24PJV.js','imports':['/build/_shared/chunk-YMPYLBPA.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-out':{'id':'routes/sign-out','parentId':'root','path':'sign-out','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-out-LILEBD4H.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/tasks':{'id':'routes/tasks','parentId':'root','path':'tasks','index':undefined,'caseSensitive':undefined,'module':'/build/routes/tasks-QY7VXZXY.js','imports':['/build/_shared/chunk-EUHQXF5R.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/tasks/create':{'id':'routes/tasks/create','parentId':'routes/tasks','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/tasks/create-GEUNKWZZ.js','imports':['/build/_shared/chunk-LZGATCQQ.js','/build/_shared/chunk-QLQLX5QX.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/tasks/delete.$id':{'id':'routes/tasks/delete.$id','parentId':'routes/tasks','path':'delete/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/tasks/delete.$id-OB3VPRTW.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/tasks/index':{'id':'routes/tasks/index','parentId':'routes/tasks','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/tasks/index-7SHX5VJI.js','imports':['/build/_shared/chunk-EHUQRGMG.js','/build/_shared/chunk-QLQLX5QX.js','/build/_shared/chunk-ODIKV3NW.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/tasks/update.$id':{'id':'routes/tasks/update.$id','parentId':'routes/tasks','path':'update/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/tasks/update.$id-XVUG7XJA.js','imports':['/build/_shared/chunk-LZGATCQQ.js','/build/_shared/chunk-QLQLX5QX.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/taskstatus/create':{'id':'routes/taskstatus/create','parentId':'root','path':'taskstatus/create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/taskstatus/create-GYKCZOQU.js','imports':['/build/_shared/chunk-WKGKD3E5.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/taskstatus/delete.$id':{'id':'routes/taskstatus/delete.$id','parentId':'root','path':'taskstatus/delete/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/taskstatus/delete.$id-ZI62Q2IN.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/taskstatus/index':{'id':'routes/taskstatus/index','parentId':'root','path':'taskstatus','index':true,'caseSensitive':undefined,'module':'/build/routes/taskstatus/index-YRLCRFBO.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/taskstatus/update.$id':{'id':'routes/taskstatus/update.$id','parentId':'root','path':'taskstatus/update/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/taskstatus/update.$id-AWQK7WP3.js','imports':['/build/_shared/chunk-WKGKD3E5.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/topics':{'id':'routes/topics','parentId':'root','path':'topics','index':undefined,'caseSensitive':undefined,'module':'/build/routes/topics-AFRPWVB7.js','imports':['/build/_shared/chunk-EUHQXF5R.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/topics/create':{'id':'routes/topics/create','parentId':'routes/topics','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/topics/create-ZFOPSDV7.js','imports':['/build/_shared/chunk-XAYMJNGU.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/topics/delete.$id':{'id':'routes/topics/delete.$id','parentId':'routes/topics','path':'delete/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/topics/delete.$id-7JP7YDBM.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/topics/index':{'id':'routes/topics/index','parentId':'routes/topics','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/topics/index-GAHORTA4.js','imports':['/build/_shared/chunk-EHUQRGMG.js','/build/_shared/chunk-QLQLX5QX.js','/build/_shared/chunk-ODIKV3NW.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/topics/update.$id':{'id':'routes/topics/update.$id','parentId':'routes/topics','path':'update/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/topics/update.$id-4LFHW26M.js','imports':['/build/_shared/chunk-XAYMJNGU.js','/build/_shared/chunk-DQ2G53AN.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/users':{'id':'routes/users','parentId':'root','path':'users','index':undefined,'caseSensitive':undefined,'module':'/build/routes/users-6TFAELAB.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/users/create':{'id':'routes/users/create','parentId':'routes/users','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/users/create-MRAY5NOY.js','imports':['/build/_shared/chunk-QRFVJABT.js','/build/_shared/chunk-YMPYLBPA.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/users/delete.$id':{'id':'routes/users/delete.$id','parentId':'routes/users','path':'delete/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/users/delete.$id-EA7NRVTC.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/users/index':{'id':'routes/users/index','parentId':'routes/users','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/users/index-NRYPU7N7.js','imports':['/build/_shared/chunk-ODIKV3NW.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/users/update.$id':{'id':'routes/users/update.$id','parentId':'routes/users','path':'update/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/users/update.$id-QKMP5NYH.js','imports':['/build/_shared/chunk-QRFVJABT.js','/build/_shared/chunk-2UDNH5ND.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'de832464','hmr':undefined,'url':'/build/manifest-DE832464.js'};", "\nimport * as entryServer from \"/Users/shahfazlizshahron/personal/team-task-manager/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/taskstatus/delete.$id.tsx\";\nimport * as route2 from \"./routes/taskstatus/update.$id.tsx\";\nimport * as route3 from \"./routes/create-an-account.tsx\";\nimport * as route4 from \"./routes/taskstatus/create.tsx\";\nimport * as route5 from \"./routes/taskstatus/index.tsx\";\nimport * as route6 from \"./routes/organizations.tsx\";\nimport * as route7 from \"./routes/organizations/delete.$id.tsx\";\nimport * as route8 from \"./routes/organizations/update.$id.tsx\";\nimport * as route9 from \"./routes/organizations/create.tsx\";\nimport * as route10 from \"./routes/organizations/index.tsx\";\nimport * as route11 from \"./routes/permissions.tsx\";\nimport * as route12 from \"./routes/permissions/delete.$id.tsx\";\nimport * as route13 from \"./routes/permissions/update.$id.tsx\";\nimport * as route14 from \"./routes/permissions/create.tsx\";\nimport * as route15 from \"./routes/permissions/index.tsx\";\nimport * as route16 from \"./routes/resources.tsx\";\nimport * as route17 from \"./routes/resources/delete.$id.tsx\";\nimport * as route18 from \"./routes/resources/update.$id.tsx\";\nimport * as route19 from \"./routes/resources/create.tsx\";\nimport * as route20 from \"./routes/resources/index.tsx\";\nimport * as route21 from \"./routes/projects.tsx\";\nimport * as route22 from \"./routes/projects/delete.$id.tsx\";\nimport * as route23 from \"./routes/projects/update.$id.tsx\";\nimport * as route24 from \"./routes/projects/create.tsx\";\nimport * as route25 from \"./routes/projects/index.tsx\";\nimport * as route26 from \"./routes/sign-out.tsx\";\nimport * as route27 from \"./routes/account.tsx\";\nimport * as route28 from \"./routes/reports.tsx\";\nimport * as route29 from \"./routes/reports/index.tsx\";\nimport * as route30 from \"./routes/sign-in.tsx\";\nimport * as route31 from \"./routes/topics.tsx\";\nimport * as route32 from \"./routes/topics/delete.$id.tsx\";\nimport * as route33 from \"./routes/topics/update.$id.tsx\";\nimport * as route34 from \"./routes/topics/create.tsx\";\nimport * as route35 from \"./routes/topics/index.tsx\";\nimport * as route36 from \"./routes/index.tsx\";\nimport * as route37 from \"./routes/roles.tsx\";\nimport * as route38 from \"./routes/roles/delete.$id.tsx\";\nimport * as route39 from \"./routes/roles/update.$id.tsx\";\nimport * as route40 from \"./routes/roles/create.tsx\";\nimport * as route41 from \"./routes/roles/index.tsx\";\nimport * as route42 from \"./routes/tasks.tsx\";\nimport * as route43 from \"./routes/tasks/delete.$id.tsx\";\nimport * as route44 from \"./routes/tasks/update.$id.tsx\";\nimport * as route45 from \"./routes/tasks/create.tsx\";\nimport * as route46 from \"./routes/tasks/index.tsx\";\nimport * as route47 from \"./routes/users.tsx\";\nimport * as route48 from \"./routes/users/delete.$id.tsx\";\nimport * as route49 from \"./routes/users/update.$id.tsx\";\nimport * as route50 from \"./routes/users/create.tsx\";\nimport * as route51 from \"./routes/users/index.tsx\";\nimport * as route52 from \"./routes/logs.tsx\";\nimport * as route53 from \"./routes/logs/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":false,\"v2_headers\":false,\"v2_meta\":false,\"v2_normalizeFormMethod\":false,\"v2_routeConvention\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/taskstatus/delete.$id\": {\n      id: \"routes/taskstatus/delete.$id\",\n      parentId: \"root\",\n      path: \"taskstatus/delete/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/taskstatus/update.$id\": {\n      id: \"routes/taskstatus/update.$id\",\n      parentId: \"root\",\n      path: \"taskstatus/update/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/create-an-account\": {\n      id: \"routes/create-an-account\",\n      parentId: \"root\",\n      path: \"create-an-account\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/taskstatus/create\": {\n      id: \"routes/taskstatus/create\",\n      parentId: \"root\",\n      path: \"taskstatus/create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/taskstatus/index\": {\n      id: \"routes/taskstatus/index\",\n      parentId: \"root\",\n      path: \"taskstatus\",\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/organizations\": {\n      id: \"routes/organizations\",\n      parentId: \"root\",\n      path: \"organizations\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/organizations/delete.$id\": {\n      id: \"routes/organizations/delete.$id\",\n      parentId: \"routes/organizations\",\n      path: \"delete/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/organizations/update.$id\": {\n      id: \"routes/organizations/update.$id\",\n      parentId: \"routes/organizations\",\n      path: \"update/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/organizations/create\": {\n      id: \"routes/organizations/create\",\n      parentId: \"routes/organizations\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/organizations/index\": {\n      id: \"routes/organizations/index\",\n      parentId: \"routes/organizations\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/permissions\": {\n      id: \"routes/permissions\",\n      parentId: \"root\",\n      path: \"permissions\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/permissions/delete.$id\": {\n      id: \"routes/permissions/delete.$id\",\n      parentId: \"routes/permissions\",\n      path: \"delete/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/permissions/update.$id\": {\n      id: \"routes/permissions/update.$id\",\n      parentId: \"routes/permissions\",\n      path: \"update/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/permissions/create\": {\n      id: \"routes/permissions/create\",\n      parentId: \"routes/permissions\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/permissions/index\": {\n      id: \"routes/permissions/index\",\n      parentId: \"routes/permissions\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/resources\": {\n      id: \"routes/resources\",\n      parentId: \"root\",\n      path: \"resources\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/resources/delete.$id\": {\n      id: \"routes/resources/delete.$id\",\n      parentId: \"routes/resources\",\n      path: \"delete/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/resources/update.$id\": {\n      id: \"routes/resources/update.$id\",\n      parentId: \"routes/resources\",\n      path: \"update/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/resources/create\": {\n      id: \"routes/resources/create\",\n      parentId: \"routes/resources\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/resources/index\": {\n      id: \"routes/resources/index\",\n      parentId: \"routes/resources\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/projects\": {\n      id: \"routes/projects\",\n      parentId: \"root\",\n      path: \"projects\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/projects/delete.$id\": {\n      id: \"routes/projects/delete.$id\",\n      parentId: \"routes/projects\",\n      path: \"delete/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/projects/update.$id\": {\n      id: \"routes/projects/update.$id\",\n      parentId: \"routes/projects\",\n      path: \"update/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/projects/create\": {\n      id: \"routes/projects/create\",\n      parentId: \"routes/projects\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/projects/index\": {\n      id: \"routes/projects/index\",\n      parentId: \"routes/projects\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/sign-out\": {\n      id: \"routes/sign-out\",\n      parentId: \"root\",\n      path: \"sign-out\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route26\n    },\n  \"routes/account\": {\n      id: \"routes/account\",\n      parentId: \"root\",\n      path: \"account\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route27\n    },\n  \"routes/reports\": {\n      id: \"routes/reports\",\n      parentId: \"root\",\n      path: \"reports\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route28\n    },\n  \"routes/reports/index\": {\n      id: \"routes/reports/index\",\n      parentId: \"routes/reports\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route29\n    },\n  \"routes/sign-in\": {\n      id: \"routes/sign-in\",\n      parentId: \"root\",\n      path: \"sign-in\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route30\n    },\n  \"routes/topics\": {\n      id: \"routes/topics\",\n      parentId: \"root\",\n      path: \"topics\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route31\n    },\n  \"routes/topics/delete.$id\": {\n      id: \"routes/topics/delete.$id\",\n      parentId: \"routes/topics\",\n      path: \"delete/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route32\n    },\n  \"routes/topics/update.$id\": {\n      id: \"routes/topics/update.$id\",\n      parentId: \"routes/topics\",\n      path: \"update/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route33\n    },\n  \"routes/topics/create\": {\n      id: \"routes/topics/create\",\n      parentId: \"routes/topics\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route34\n    },\n  \"routes/topics/index\": {\n      id: \"routes/topics/index\",\n      parentId: \"routes/topics\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route35\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route36\n    },\n  \"routes/roles\": {\n      id: \"routes/roles\",\n      parentId: \"root\",\n      path: \"roles\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route37\n    },\n  \"routes/roles/delete.$id\": {\n      id: \"routes/roles/delete.$id\",\n      parentId: \"routes/roles\",\n      path: \"delete/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route38\n    },\n  \"routes/roles/update.$id\": {\n      id: \"routes/roles/update.$id\",\n      parentId: \"routes/roles\",\n      path: \"update/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route39\n    },\n  \"routes/roles/create\": {\n      id: \"routes/roles/create\",\n      parentId: \"routes/roles\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route40\n    },\n  \"routes/roles/index\": {\n      id: \"routes/roles/index\",\n      parentId: \"routes/roles\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route41\n    },\n  \"routes/tasks\": {\n      id: \"routes/tasks\",\n      parentId: \"root\",\n      path: \"tasks\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route42\n    },\n  \"routes/tasks/delete.$id\": {\n      id: \"routes/tasks/delete.$id\",\n      parentId: \"routes/tasks\",\n      path: \"delete/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route43\n    },\n  \"routes/tasks/update.$id\": {\n      id: \"routes/tasks/update.$id\",\n      parentId: \"routes/tasks\",\n      path: \"update/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route44\n    },\n  \"routes/tasks/create\": {\n      id: \"routes/tasks/create\",\n      parentId: \"routes/tasks\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route45\n    },\n  \"routes/tasks/index\": {\n      id: \"routes/tasks/index\",\n      parentId: \"routes/tasks\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route46\n    },\n  \"routes/users\": {\n      id: \"routes/users\",\n      parentId: \"root\",\n      path: \"users\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route47\n    },\n  \"routes/users/delete.$id\": {\n      id: \"routes/users/delete.$id\",\n      parentId: \"routes/users\",\n      path: \"delete/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route48\n    },\n  \"routes/users/update.$id\": {\n      id: \"routes/users/update.$id\",\n      parentId: \"routes/users\",\n      path: \"update/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route49\n    },\n  \"routes/users/create\": {\n      id: \"routes/users/create\",\n      parentId: \"routes/users\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route50\n    },\n  \"routes/users/index\": {\n      id: \"routes/users/index\",\n      parentId: \"routes/users\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route51\n    },\n  \"routes/logs\": {\n      id: \"routes/logs\",\n      parentId: \"root\",\n      path: \"logs\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route52\n    },\n  \"routes/logs/index\": {\n      id: \"routes/logs/index\",\n      parentId: \"routes/logs\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route53\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_react", "import_react", "import_jsx_dev_runtime", "import_node", "NodeCache", "cache", "create", "search", "update", "erase", "addUser", "eraseUser", "search", "create", "TABLE_ATTRIBUTES", "TABLE_NAME", "hydrate", "update", "erase", "search", "TABLE_NAME", "TABLE_ATTRIBUTES", "getAttributeValues", "set", "create", "search", "update", "erase", "getObjectKeyValues", "create", "TABLE_ATTRIBUTES", "TABLE_NAME", "update", "TABLE_ATTRIBUTES", "TABLE_NAME", "erase", "addUser", "getObjectKeyValues", "eraseUser", "search", "hydrate", "TABLE_NAME", "TABLE_ATTRIBUTES", "getAttributeValues", "set", "create", "search", "update", "erase", "getObjectKeyValues", "create", "TABLE_ATTRIBUTES", "TABLE_NAME", "readAll", "hydrate", "update", "erase", "search", "TABLE_NAME", "TABLE_ATTRIBUTES", "getAttributeValues", "set", "create", "search", "update", "erase", "getObjectKeyValues", "create", "TABLE_ATTRIBUTES", "TABLE_NAME", "readAll", "hydrate", "update", "erase", "search", "TABLE_NAME", "TABLE_ATTRIBUTES", "getAttributeValues", "set", "create", "search", "update", "roles", "erase", "searchOrganization", "searchProject", "searchTopic", "search", "import_react", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "create", "TABLE_ATTRIBUTES", "TABLE_NAME", "readAll", "hydrate", "update", "erase", "search", "TABLE_NAME", "TABLE_ATTRIBUTES", "getAttributeValues", "set", "create", "search", "update", "erase", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "erase", "action", "loader", "import_node", "import_react", "DOMPurify", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "action", "action", "meta", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "getButtonName", "import_jsx_dev_runtime", "useNavigation", "action", "bcrypt", "meta", "action", "import_node", "import_react", "import_jsx_dev_runtime", "useNavigation", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "readAll", "meta", "links", "import_react", "import_jsx_dev_runtime", "links", "delete_id_exports", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "action", "erase", "update_id_exports", "action", "DeleteOrganization", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "getButtonName", "import_jsx_dev_runtime", "DeleteOrganization", "useNavigation", "loader", "search", "action", "create_exports", "action", "import_node", "import_react", "import_jsx_dev_runtime", "useNavigation", "action", "organizations_exports", "action", "loader", "meta", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Rows", "loader", "searchOrganization", "readAll", "action", "addUser", "eraseUser", "meta", "import_react", "import_jsx_dev_runtime", "delete_id_exports", "action", "loader", "import_node", "import_react", "create", "TABLE_ATTRIBUTES", "TABLE_NAME", "readAll", "hydrate", "update", "erase", "search", "TABLE_NAME", "TABLE_ATTRIBUTES", "getAttributeValues", "set", "create", "search", "update", "erase", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "action", "erase", "update_id_exports", "action", "DeletePermission", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "getButtonName", "import_jsx_dev_runtime", "DeletePermission", "useNavigation", "loader", "search", "action", "create_exports", "action", "import_node", "import_react", "import_jsx_dev_runtime", "useNavigation", "action", "permissions_exports", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "Rows", "loader", "readAll", "meta", "links", "import_react", "import_jsx_dev_runtime", "links", "delete_id_exports", "action", "loader", "import_node", "import_react", "getObjectKeyValues", "create", "TABLE_ATTRIBUTES", "TABLE_NAME", "readAll", "hydrate", "update", "erase", "search", "TABLE_NAME", "TABLE_ATTRIBUTES", "getAttributeValues", "set", "create", "search", "update", "erase", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "action", "erase", "update_id_exports", "action", "DeleteResource", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "getButtonName", "import_jsx_dev_runtime", "DeleteResource", "useNavigation", "loader", "search", "action", "create_exports", "action", "import_node", "import_react", "import_jsx_dev_runtime", "useNavigation", "action", "resources_exports", "action", "loader", "meta", "import_react", "import_node", "import_jsx_dev_runtime", "Rows", "loader", "readAll", "action", "meta", "links", "import_react", "import_jsx_dev_runtime", "links", "delete_id_exports", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "action", "erase", "update_id_exports", "action", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "getButtonName", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "action", "create_exports", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "action", "projects_exports", "action", "loader", "meta", "import_react", "import_node", "import_jsx_dev_runtime", "ACTION_ADD_USER", "ACTION_REMOVE_USER", "Rows", "UserChips", "UserSelectOptions", "loader", "searchProject", "readAll", "action", "addUser", "eraseUser", "meta", "action", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "action", "meta", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "meta", "import_react", "import_jsx_dev_runtime", "reports_exports", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "readAll", "meta", "action", "meta", "import_node", "import_react", "import_bcryptjs", "import_jsx_dev_runtime", "useNavigation", "action", "search", "bcrypt", "meta", "links", "import_react", "import_jsx_dev_runtime", "links", "delete_id_exports", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "action", "erase", "update_id_exports", "action", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "getButtonName", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "action", "create_exports", "action", "CreateTopic", "import_node", "import_react", "import_jsx_dev_runtime", "CreateTopic", "useNavigation", "action", "topics_exports", "action", "loader", "meta", "import_react", "import_node", "import_jsx_dev_runtime", "Rows", "loader", "searchTopic", "searchProject", "action", "meta", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "delete_id_exports", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "action", "erase", "update_id_exports", "action", "DeleteRole", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "getButtonName", "import_jsx_dev_runtime", "DeleteRole", "useNavigation", "loader", "roles", "search", "action", "create_exports", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "action", "roles_exports", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "Rows", "loader", "meta", "links", "import_react", "import_jsx_dev_runtime", "links", "delete_id_exports", "action", "loader", "import_node", "import_react", "getObjectKeyValues", "create", "TABLE_ATTRIBUTES", "TABLE_NAME", "readAll", "hydrate", "update", "erase", "addTopic", "eraseTopic", "search", "searchResourceTopic", "TABLE_NAME", "TABLE_ATTRIBUTES", "getAttributeValues", "set", "create", "search", "update", "erase", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "action", "erase", "update_id_exports", "action", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "getButtonName", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "readAll", "action", "create_exports", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "readAll", "action", "search", "tasks_exports", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "ACTION_ADD_TOPIC", "ACTION_REMOVE_TOPIC", "Rows", "TopicChips", "TopicSelectOptions", "Task", "loader", "readAll", "action", "addTopic", "eraseTopic", "meta", "import_react", "import_jsx_dev_runtime", "delete_id_exports", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "useNavigation", "loader", "search", "action", "erase", "update_id_exports", "action", "DeleteUser", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "DeleteUser", "useNavigation", "loader", "search", "action", "create_exports", "action", "meta", "import_node", "import_react", "import_bcryptjs", "import_jsx_dev_runtime", "useNavigation", "action", "bcrypt", "create", "meta", "users_exports", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "Rows", "loader", "readAll", "meta", "import_react", "import_jsx_dev_runtime", "logs_exports", "loader", "meta", "import_node", "import_react", "TABLE_NAME", "TABLE_ATTRIBUTES", "getAttributeValues", "set", "create", "update", "getAttributeValues", "set", "create", "update", "create", "TABLE_ATTRIBUTES", "TABLE_NAME", "readAll", "update", "import_jsx_dev_runtime", "Rows", "loader", "readAll", "meta", "delete_id_exports", "update_id_exports", "create_exports", "organizations_exports", "permissions_exports", "resources_exports", "projects_exports", "reports_exports", "topics_exports", "roles_exports", "tasks_exports", "users_exports", "logs_exports"]
}
